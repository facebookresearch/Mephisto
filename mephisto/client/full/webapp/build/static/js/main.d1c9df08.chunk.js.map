{"version":3,"sources":["sample.png","Dashboard.js","Review.js","TaskGallery.js","M.svg","App.js","index.js"],"names":["module","exports","className","href","target","rel","to","map","i","Object","entries","dataset","model","enableSafety","saveDataFile","key","value","toString","alt","style","marginTop","display","flexDirection","maxWidth","width","margin","alignItems","background","padding","color","fontWeight","timezone","browser","backgroundColor","border","flex","minHeight","src","samplePic","data_model","name","desc","tags","initialData","React","useState","selectedIndex","setSelectedIndex","searchTerm","setSearchTerm","boxSizing","placeholder","onChange","e","task","idx","match","RegExp","join","cx","selected","onClick","tag","JSONEditor","id","initial","justifyContent","marginBottom","font","title","height","borderRadius","overflow","sandbox","highlightActiveLine","fontSize","mode","tabSize","maxLines","Infinity","theme","showGutter","showPrintMargin","editorProps","$blockScrolling","_extends","assign","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","stroke","strokeWidth","fill","fillRule","fontFamily","letterSpacing","transform","x","y","_ref","svgRef","props","viewBox","ref","undefined","ForwardRef","forwardRef","App","exact","path","render","Dashboard","TaskGallery","Review","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d1c9df08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample.44730b5b.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <div className=\"page-body\">\n    <div className=\"card-outer-container\">\n      <div className=\"card-container\">\n        <div className=\"card create-task\">\n          <h3>\n            <span className=\"badge\">1</span>\n            <em>Create</em> a task\n          </h3>\n          {/* <p>\nEdit <code>src/App.js</code> and save to reload.\n</p> */}\n          <div>\n            <p>\n              You will need an MTurk Requester Account and an AWS account\n              (separate accounts).\n              <a\n                className=\"App-link\"\n                href=\"https://parl.ai/docs/tutorial_mturk.html#running-a-task\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Setting up AWS »\n              </a>\n            </p>\n            <p>\n              We have a growing collection of tasks already available. You can\n              re-use one of them, clone &amp; modify one of them to create a\n              similar yet different task, or create a completely new custom task\n              altogether. Custom tasks can range from simple static pages, to\n              multi-agent dialogue, to dynamic &amp; interactive React\n              applications!\n              <Link className=\"App-link\" to=\"/task-gallery\">\n                View gallery of existing tasks »\n              </Link>\n              <a\n                className=\"App-link\"\n                href=\"https://parl.ai/docs/tutorial_task.html#creating-a-new-task-the-more-complete-way\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Create a custom task »\n              </a>\n            </p>\n          </div>\n        </div>\n        <div className=\"card\">\n          <h3>\n            <span className=\"badge\">2</span>\n            <em>Launch</em> tasks\n          </h3>\n          <p>\n            You currently have <strong>3 tasks</strong> running live.\n          </p>\n          {[1, 2, 3].map(i => (\n            <div className=\"live-task interactive\">\n              <div className=\"title\">\n                {i > 1 ? \"semantic annotation\" : \"LIGHT pilot (v2)\"}\n                {i === 1 && <span className=\"sandbox\">Sandbox</span>}\n              </div>\n              <div className=\"hyperparameters\">\n                {\n                  [null].map(() => {\n                    return Object.entries({\n                      dataset: \"twitter\",\n                      model: \"v3.123\",\n                      enableSafety: true,\n                      saveDataFile: \"localDB\"\n                    }).map(([key, value]) => (\n                      <span className=\"hyperparameter\">\n                        <span className=\"key\">{key}</span>=\n                        <span className=\"value\">{value.toString()}</span>\n                      </span>\n                    ));\n                  })[0]\n                }\n              </div>\n              <div className=\"details\">\n                Started 8 hours ago. 25 completed HITs. 3 disconnects.\n              </div>\n            </div>\n          ))}\n          <button className=\"btn\">Launch a new task</button>\n        </div>\n        <div className=\"card\">\n          <h3>\n            <span className=\"badge\">3</span>\n            <em>Review</em> data\n          </h3>\n          {/* <p>\nEdit <code>src/App.js</code> and save to reload.\n</p> */}\n          {/* {[{amount: 12, daysPending: 1}]} */}\n          <p>\n            You have{\" \"}\n            <Link to=\"/review\" alt=\"link\">\n              300 HITs\n            </Link>{\" \"}\n            left to review.\n          </p>\n          {/* <p class=\"warning\">\n  <a href=\"#\" alt=\"link\">\n    10 tasks\n  </a>{\" \"}\n  will be auto-reviewed by tomorrow.\n</p> */}\n\n          <Link className=\"unstyled\" to=\"/review\">\n            <div className=\"live-task interactive\">\n              <div className=\"title\">LIGHT dialogue</div>\n              <div className=\"hyperparameters\">\n                {\n                  [null].map(() => {\n                    return Object.entries({\n                      dataset: \"twitter\",\n                      model: \"v3.123\",\n                      enableSafety: true,\n                      saveDataFile: \"localDB\"\n                    }).map(([key, value]) => (\n                      <span className=\"hyperparameter\">\n                        <span className=\"key\">{key}</span>=\n                        <span className=\"value\">{value.toString()}</span>\n                      </span>\n                    ));\n                  })[0]\n                }\n              </div>\n              <div className=\"details\">\n                <div className=\"metrics highlight-first\">\n                  <div className=\"metric\">\n                    70<label>Unreviewed</label>\n                  </div>\n                  <div className=\"metric\">\n                    300<label>Approved</label>\n                  </div>\n                  <div className=\"metric\">\n                    23<label>Rejected</label>\n                  </div>\n                </div>\n                {/* Reviewed: 300 | Unreviewed: <strong>80</strong> */}\n                <p className=\"warning\">\n                  Warning: 10 HITs are nearing their 2 week deadline and risk\n                  being auto-approved.\n                </p>\n              </div>\n            </div>\n          </Link>\n          <div className=\"live-task interactive\">\n            <div className=\"title\">LIGHT dialogue (pilot v1)</div>\n            <div className=\"hyperparameters\">\n              {\n                [null].map(() => {\n                  return Object.entries({\n                    dataset: \"twitter\",\n                    model: \"v3.123\",\n                    enableSafety: true,\n                    saveDataFile: \"localDB\"\n                  }).map(([key, value]) => (\n                    <span className=\"hyperparameter\">\n                      <span className=\"key\">{key}</span>=\n                      <span className=\"value\">{value.toString()}</span>\n                    </span>\n                  ));\n                })[0]\n              }\n            </div>\n            <div className=\"details\">\n              <div className=\"metrics highlight-first\">\n                <div className=\"metric\">\n                  230<label>Unreviewed</label>\n                </div>\n                <div className=\"metric\">\n                  300<label>Approved</label>\n                </div>\n                <div className=\"metric\">\n                  23<label>Rejected</label>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div style={{ marginTop: 20 }}>\n            <a\n              className=\"App-link\"\n              href=\"#\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              View all completed tasks »\n            </a>\n          </div>\n          {/* <div className=\"bar\" style={{ width: \"50%\" }}>\n  &nbsp;\n</div>\n<div className=\"bar\" style={{ width: \"100%\" }}>\n  &nbsp;\n</div> */}\n        </div>\n        <div className=\"card export-data\">\n          <h3>\n            <span className=\"badge\">4</span>\n            <em>Export</em> data\n          </h3>\n          <p>\n            Output data for tasks is stored in:{\" \"}\n            <code>/data/&lt;task-name&gt;/&lt;run-id&gt;</code>\n          </p>\n          <p>\n            Best practices:\n            <ul>\n              <li>\n                Use a Jupyter notebook to post-process your data to encode\n                reproducibility steps.\n              </li>\n            </ul>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./review.css\";\nimport samplePic from \"./sample.png\"\n\nexport default () => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      maxWidth: 1440,\n      width: \"100%\",\n      margin: \"0 auto\",\n      alignItems: \"flex-start\"\n    }}\n  >\n    <div className=\"card\">\n      <h3>\n        <span className=\"badge\">3</span>\n        <em>Review</em> data\n      </h3>\n      <p>\n        You have{\" \"}\n        <Link to=\"/review\" alt=\"link\">\n          300 total HITs\n        </Link>{\" \"}\n        left to review across 5 tasks.\n      </p>\n      <div\n        style={{\n          background: \"#ee1054\",\n          margin: \"0px -20px\",\n          padding: \"5px 20px\",\n          color: \"white\",\n          fontWeight: \"bold\"\n        }}\n      >\n        Currently Reviewing Task:\n      </div>\n      <div className=\"live-task\">\n        <div className=\"title\">LIGHT dialogue</div>\n        <div className=\"hyperparameters\">\n          {\n            [null].map(() => {\n              return Object.entries({\n                dataset: \"twitter\",\n                model: \"v3.123\",\n                enableSafety: true,\n                saveDataFile: \"localDB\"\n              }).map(([key, value]) => (\n                <span className=\"hyperparameter\">\n                  <span className=\"key\">{key}</span>=\n                  <span className=\"value\">{value.toString()}</span>\n                </span>\n              ));\n            })[0]\n          }\n        </div>\n        <div className=\"details\">\n          <div className=\"metrics highlight-first\">\n            <div className=\"metric\">\n              70<label>Unreviewed</label>\n            </div>\n            <div className=\"metric\">\n              300<label>Approved</label>\n            </div>\n            <div className=\"metric\">\n              23<label>Rejected</label>\n            </div>\n          </div>\n\n          {/* <p className=\"warning\">\n            Warning: 10 HITs are nearing their 2 week deadline and risk being\n            auto-approved.\n          </p> */}\n        </div>\n      </div>\n      <div\n        style={{\n          background: \"#ee1054\",\n          margin: \"0px -20px\",\n          padding: \"5px 20px\",\n          color: \"white\",\n          fontWeight: \"bold\"\n        }}\n      >\n        Currently Reviewing User:\n      </div>\n\n      <div className=\"user_info\">\n        <div className=\"title\">User #182</div>\n        <div className=\"hyperparameters\">\n          {\n            [null].map(() => {\n              return Object.entries({\n                \"All-Time Approved\": \"96%\",\n                \"All-Time Evaluated\": \"83\",\n                timezone: \"EST\",\n                browser: \"Chrome\"\n              }).map(([key, value]) => (\n                <span className=\"hyperparameter\">\n                  <span className=\"key\">{key}</span>=\n                  <span className=\"value\">{value.toString()}</span>\n                </span>\n              ));\n            })[0]\n          }\n        </div>\n        <div className=\"details\">\n          <div className=\"metrics highlight-first\">\n            <div className=\"metric\">\n              3/3<label>Golden tasks</label>\n            </div>\n            <div className=\"metric\">\n              31<label>Submitted</label>\n            </div>\n            <div className=\"metric\">\n              0<label>Disconnects</label>\n            </div>\n          </div>\n          <div\n            className=\"metrics highlight-first anticipate-double\"\n            style={{ marginTop: 15 }}\n          >\n            <div className=\"metric\">\n              &mdash; / 0{\" \"}\n              <label>\n                Current Task: %&nbsp;Approved&nbsp;/&nbsp;#&nbsp;Evaluated\n              </label>\n            </div>\n            {/* <div className=\"metric\">\n              96% / 3,000{\" \"}\n              <label>\n                All Tasks: %&nbsp;Approved&nbsp;/&nbsp;#&nbsp;Evaluated\n              </label>\n            </div> */}\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          backgroundColor: \"#ffffcf\",\n          padding: \"5px 10px 10px\",\n          border: \"1px solid #f5f5e0\"\n        }}\n      >\n        <button className=\"btn\" style={{ background: \"green\" }}>\n          Approve\n        </button>\n        <button className=\"btn\">Approve all by this user</button>\n        <button className=\"btn\" style={{ background: \"crimson\" }}>\n          Reject\n        </button>\n      </div>\n    </div>\n    <div\n      className=\"card\"\n      style={{\n        flex: \"1\",\n        backgroundColor: \"white\",\n        width: \"100%\",\n        maxWidth: \"none\",\n        margin: \"15px 20px 0 10px\",\n        minHeight: 300\n      }}\n    >\n      <div className=\"review-control-panel\">&nbsp;</div>\n      <div\n        className=\"task-frame\"\n        style={{\n          backgroundColor: \"white\",\n          color: \"black\"\n          //   border: \"3px solid #ddd\"\n        }}\n      >\n        <img src={samplePic} width=\"100%\" />\n      </div>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport \"./taskgallery.css\";\nimport cx from \"classnames\";\n\nimport brace from \"brace\";\nimport AceEditor from \"react-ace\";\nimport \"brace/mode/javascript\";\n\nconst data_model = [\n  {\n    name: \"QA Data Collection\",\n    desc:\n      \"Collect questions and answers from Turkers, given a random Wikipedia paragraph from SQuAD\",\n    tags: [\"qa\", \"wikipedia\", \"SQuAD\"]\n  },\n  {\n    name: \"Model Evaluator\",\n    desc:\n      \"Ask Turkers to evaluate the information retrieval baseline model on the Reddit movie dialog dataset\",\n    tags: [\"reddit\", \"evaluate\"]\n  },\n  {\n    name: \"Multi-Agent Dialog\",\n    desc: \"Round-robin chat between a local human agent and two Turkers\",\n    tags: [\"round-robin\", \"dialog\"]\n  },\n  {\n    name: \"Deal or No Deal\",\n    desc:\n      \"Negotiation chat between two agents over how to fairly divide a fixed set of items when each agent values the items differently\",\n    tags: [\"negotiation\"]\n  },\n  {\n    name: \"Qualification Flow Example\",\n    desc:\n      \"Filter out workers from working on more instances of your task if they fail to complete a test instance properly\",\n    tags: [\"example\"]\n  },\n  {\n    name: \"Semantic Alignment\",\n    desc:\n      \"Allow Turkers to pick matching words between a pair of sentences based on some criteria\",\n    tags: [\"sentences\", \"matching\"],\n    initialData: `{\n  \"text1\": \"Brad and Angelina tied the knot on Friday\",\n  \"text2\": \"Angelina got married to Brad on Friday\"\n}`\n  }\n];\n\nexport default () => {\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        maxWidth: 1440,\n        width: \"100%\",\n        margin: \"0 auto\",\n        alignItems: \"stretch\",\n        padding: \"0 20px\",\n        boxSizing: \"border-box\"\n      }}\n    >\n      <div\n        className=\"card\"\n        style={{\n          maxWidth: \"none\",\n          width: \"100%\",\n          minHeight: \"300px\",\n          display: \"flex\"\n        }}\n      >\n        <div className=\"task-list\">\n          <input\n            className=\"search\"\n            placeholder=\"search...\"\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n          />\n          {data_model.map(\n            (task, idx) =>\n              (searchTerm === \"\" ||\n                task.name.match(new RegExp(searchTerm, \"i\")) ||\n                task.tags.join(\" \").match(new RegExp(searchTerm, \"i\"))) && (\n                <div\n                  className={cx(\"task-list-item\", {\n                    selected: idx === selectedIndex\n                  })}\n                  onClick={() => setSelectedIndex(idx)}\n                >\n                  <div className=\"name\">{task.name}</div>\n                  <div className=\"tags\">\n                    {task.tags.map(tag => (\n                      <span>#{tag}</span>\n                    ))}\n                  </div>\n                </div>\n              )\n          )}\n        </div>{\" \"}\n        {selectedIndex !== null && (\n          <div className=\"task-description\" key={selectedIndex}>\n            <h1>{data_model[selectedIndex].name}</h1>\n            <p>{data_model[selectedIndex].desc}</p>\n            <div className=\"controls\">\n              <h3>\n                Pass <code>task_data</code>:\n              </h3>\n              {/* <textarea /> */}\n              <JSONEditor\n                id={selectedIndex}\n                initial={data_model[selectedIndex].initialData || \"\"}\n              />\n              <button className=\"btn inverse rounded\">Submit</button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                marginBottom: 10\n              }}\n            >\n              <h3>Live Example:</h3>\n              <div>\n                Viewing As:{\" \"}\n                <select style={{ font: \"inherit\" }}>\n                  <option>Worker</option>\n                  <option>Teacher</option>\n                  <option>Reviewer</option>\n                </select>\n              </div>\n            </div>\n            <iframe\n              src=\"https://codesandbox.io/embed/x3oy3myvyp?fontsize=14&hidenavigation=1&view=preview\"\n              title=\"Paired Phrases Picker v0.1\"\n              style={{\n                width: \"100%\",\n                height: \"500px\",\n                border: 0,\n                borderRadius: \"4px\",\n                overflow: \"hidden\"\n              }}\n              sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction JSONEditor({ initial, id }) {\n  const [editorCode, setEditorCode] = React.useState(\"test\");\n\n  return (\n    <div className=\"text-container\">\n      <AceEditor\n        highlightActiveLine={false}\n        value={initial}\n        style={{\n          backgroundColor: \"transparent\",\n          padding: \"10px\",\n          width: \"100%\",\n          fontSize: 14,\n          boxSizing: \"border-box\"\n        }}\n        mode=\"javascript\"\n        placeholder={\"Type JSON payload here...\"}\n        tabSize={2}\n        maxLines={Infinity}\n        theme=\"tuesday\"\n        height=\"100px\"\n        showGutter={false}\n        showPrintMargin={false}\n        name={id}\n        editorProps={{\n          $blockScrolling: Infinity\n        }}\n      />\n    </div>\n  );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"M\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Page-1\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  fontFamily: \"Phosphate-Inline, Phosphate\",\n  fontSize: 48,\n  fontWeight: \"normal\",\n  letterSpacing: -0.8135598\n}, React.createElement(\"g\", {\n  id: \"Landing-Page\",\n  transform: \"translate(-73.000000, -49.000000)\",\n  fill: \"#2768FF\"\n}, React.createElement(\"text\", {\n  id: \"M\"\n}, React.createElement(\"tspan\", {\n  x: 72.4507799,\n  y: 82\n}, \"M\"))));\n\nvar SvgM = function SvgM(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    className: \"logo\",\n    width: \"35px\",\n    height: \"33px\",\n    viewBox: \"0 0 35 33\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? React.createElement(\"title\", null, title) : null, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgM, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/M.cf231218.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport Review from \"./Review\";\nimport TaskGallery from \"./TaskGallery\";\nimport Splash from \"./Splash\";\nimport { ReactComponent as M } from \"./M.svg\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <header className=\"App-header\">\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <Link to=\"/dashboard\">\n                    {/* <img\n                      alt=\"logo\"\n                      className=\"logo\"\n                      src=\"https://parl.ai/static/img/icon.png\"\n                      style={{\n                        width: 60\n                      }}\n                    /> */}\n                    <M />\n                    mephisto\n                  </Link>\n                )}\n              />\n              <Route\n                render={() => (\n                  <Link to=\"/dashboard\">\n                    {/* <img\n                      alt=\"logo\"\n                      className=\"logo\"\n                      src=\"https://parl.ai/static/img/icon.png\"\n                      style={{\n                        width: 60\n                      }}\n                    /> */}\n                    <M />\n                    mephisto\n                  </Link>\n                )}\n              />\n            </Switch>\n          </header>\n\n          <Route exact path=\"/\" render={() => <Dashboard />} />\n          <Route exact path=\"/dashboard\" render={() => <Dashboard />} />\n          <Route exact path=\"/task-gallery\" render={() => <TaskGallery />} />\n          <Route exact path=\"/review\" render={() => <Review />} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}