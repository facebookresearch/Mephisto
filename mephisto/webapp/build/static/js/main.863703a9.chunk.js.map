{"version":3,"sources":["widgets/Base.tsx","widgets/Prepare.tsx","utils.ts","widgets/Launch.tsx","widgets/Review.tsx","App.tsx","axios.ts","index.tsx"],"names":["children","heading","badge","elevation","Elevation","THREE","className","style","marginBottom","undefined","word","plural","React","useState","numInstalledTasks","requesterDrawerOpen","setRequesterDrawerOpen","useAxios","url","params","data","loading","error","refetch","Base","icon","color","Colors","RED3","onClick","requesters","length","ORANGE3","onClose","title","autoFocus","canEscapeKeyClose","enforceFocus","hasBackdrop","isOpen","position","Position","BOTTOM","size","Drawer","SIZE_STANDARD","usePortal","Classes","DRAWER_BODY","backgroundColor","LIGHT_GRAY4","DIALOG_BODY","map","r","key","requester_id","interactive","registered","GREEN4","GRAY4","margin","provider_type","display","marginRight","cx","requester_name","marginTop","disabled","fontSize","App","top","Prepare","Launch","Review","axios","Axios","create","baseURL","interceptors","request","use","config","console","log","delayed","Promise","resolve","setTimeout","configure","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.863703a9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Elevation } from \"@blueprintjs/core\";\n\ninterface BaseProps {\n  heading: React.ReactElement;\n  badge: string | undefined;\n}\n\nexport default (function BaseWidget({ children, heading, badge }) {\n  return (\n    <Card elevation={Elevation.THREE} className=\"widget\">\n      <h4 className=\"bp3-heading\" style={{ marginBottom: 15 }}>\n        {badge !== undefined && (\n          <span className=\"bp3-tag bp3-large bp3-minimal bp3-round step-badge\">\n            {badge}\n          </span>\n        )}\n        {heading}\n      </h4>\n      {children}\n    </Card>\n  );\n} as React.FC<BaseProps>);\n","import React from \"react\";\nimport BaseWidget from \"./Base\";\nimport { Colors, Icon, Button } from \"@blueprintjs/core\";\nimport { pluralize } from \"../utils\";\nimport cx from \"classnames\";\nimport useAxios from \"axios-hooks\";\nimport { Drawer, Classes, Position, Card } from \"@blueprintjs/core\";\n\ninterface Requester {\n  provider_type: \"string\";\n  registered: boolean;\n  requester_id: string;\n  requester_name: string;\n}\n\nexport default (function PrepareWidget() {\n  const [numProviders, setNumProviders] = React.useState(0);\n  const [numInstalledTasks, setNumInstalledTasks] = React.useState(1);\n  const [requesterDrawerOpen, setRequesterDrawerOpen] = React.useState(false);\n\n  const [{ data, loading, error }, refetch] = useAxios({\n    url: \"requesters\",\n    params: \"test\"\n  });\n\n  return (\n    <BaseWidget badge=\"Step 1\" heading={<span>Prepare it</span>}>\n      <>\n        <div className=\"bullet\">\n          <div className=\"bp3-text-large bp3-running-text bp3-text-muted\">\n            {error ? (\n              <span>\n                <Icon icon=\"warning-sign\" color={Colors.RED3} /> Something went\n                wrong.{\" \"}\n                <a onClick={() => refetch()}>\n                  <strong>Try again</strong>\n                </a>\n              </span>\n            ) : loading ? (\n              <div className=\"bp3-skeleton bp3-text\">&nbsp; </div>\n            ) : data.requesters.length === 0 ? (\n              <span>\n                <Icon icon=\"warning-sign\" color={Colors.ORANGE3} />\n                {\"  \"}\n                You have no accounts set up.{\" \"}\n                <a>\n                  <strong>Configure</strong>\n                </a>\n              </span>\n            ) : (\n              <span>\n                <Icon icon=\"people\" /> You have{\" \"}\n                <a onClick={() => setRequesterDrawerOpen(true)}>\n                  <strong>{data.requesters.length} requester accounts</strong>\n                </a>{\" \"}\n                set up\n              </span>\n            )}\n          </div>\n          <Drawer\n            icon=\"people\"\n            onClose={() => setRequesterDrawerOpen(false)}\n            title=\"Requester accounts\"\n            autoFocus={true}\n            canEscapeKeyClose={true}\n            // canOutsideClickClose={true}\n            enforceFocus={true}\n            hasBackdrop={true}\n            isOpen={requesterDrawerOpen}\n            position={Position.BOTTOM}\n            size={Drawer.SIZE_STANDARD}\n            usePortal={true}\n          >\n            <div\n              className={Classes.DRAWER_BODY}\n              style={{ backgroundColor: Colors.LIGHT_GRAY4 }}\n            >\n              <div className={Classes.DIALOG_BODY}>\n                {data && (\n                  <div>\n                    {data.requesters.map((r: Requester) => (\n                      <div key={r.requester_id} style={{ marginBottom: 12 }}>\n                        <Card interactive={true}>\n                          <Icon\n                            icon={r.registered ? \"tick-circle\" : \"issue\"}\n                            color={r.registered ? Colors.GREEN4 : Colors.GRAY4}\n                            title={\"Registered?\"}\n                          />\n                          <span\n                            style={{ margin: \"0 15px\" }}\n                            className=\"bp3-tag bp3-large bp3-minimal bp3-round step-badge\"\n                          >\n                            {r.provider_type}\n                          </span>\n                          <h4\n                            style={{ display: \"inline\", marginRight: 4 }}\n                            className={cx(\"bp3-heading\", {\n                              \"bp3-text-muted\": !r.registered\n                            })}\n                          >\n                            {r.requester_name}\n                          </h4>{\" \"}\n                          {!r.registered && (\n                            <span>\n                              &mdash; This account still needs to be registered.\n                            </span>\n                          )}\n                        </Card>\n                      </div>\n                    ))}\n                    <div style={{ marginTop: 15 }}>\n                      <Button disabled icon=\"new-person\">\n                        (TODO) Add a new requester account...\n                      </Button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </Drawer>\n        </div>\n        <div className=\"bullet\">\n          <div className=\"bp3-text-large bp3-running-text bp3-text-muted\">\n            <Icon icon={numInstalledTasks === 1 ? \"layer\" : \"layers\"} /> You\n            have{\" \"}\n            <strong>\n              {numInstalledTasks} task{\" \"}\n              {pluralize(numInstalledTasks, \"template\")}\n            </strong>\n            {\"  \"}\n            available to use\n          </div>\n        </div>\n      </>\n    </BaseWidget>\n  );\n} as React.FC);\n","export function pluralize(num: Number, word: string, plural?: string): string {\n  if (num === 1) {\n    return word;\n  } else return plural || word + \"s\";\n}\n","import React from \"react\";\nimport BaseWidget from \"./Base\";\n\nexport default (function LaunchWidget() {\n  return (\n    <BaseWidget badge=\"Step 2\" heading={<span>Launch it</span>}>\n      <div>\n        <div className=\"bp3-non-ideal-state\">\n          <div className=\"bp3-non-ideal-state-visual\" style={{ fontSize: 20 }}>\n            <span className=\"bp3-icon bp3-icon-clean\"></span>\n          </div>\n          <div>You have no tasks running.</div>\n          <button className=\"bp3-button \">Launch a task</button>\n        </div>\n      </div>\n    </BaseWidget>\n  );\n} as React.FC);\n","import React from \"react\";\nimport BaseWidget from \"./Base\";\n\nexport default (function ReviewWidget() {\n  return (\n    <BaseWidget badge=\"Step 3\" heading={<span>Review it</span>}>\n      <div>\n        <div className=\"bp3-non-ideal-state\">\n          <div className=\"bp3-non-ideal-state-visual\" style={{ fontSize: 20 }}>\n            <span className=\"bp3-icon bp3-icon-inbox-search\"></span>\n          </div>\n          <div>You have no work to review.</div>\n        </div>\n      </div>\n    </BaseWidget>\n  );\n} as React.FC);\n","import React from \"react\";\nimport \"./App.css\";\nimport PrepareWidget from \"./widgets/Prepare\";\nimport LaunchWidget from \"./widgets/Launch\";\nimport ReviewWidget from \"./widgets/Review\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"above-the-fold\"></div>\n      <header>\n        <h1 className=\"bp3-heading\">mephisto</h1>\n        <em\n          className=\"bp3-italics bp3-text-large bp3-text-disabled\"\n          style={{ position: \"relative\", top: -8 }}\n        >\n          crowdsourcing without the tears\n        </em>\n      </header>\n      <div className=\"container\">\n        <PrepareWidget />\n        <LaunchWidget />\n        <ReviewWidget />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { configure } from \"axios-hooks\";\nimport Axios, { AxiosRequestConfig } from \"axios\";\n\nconst axios = Axios.create({\n  baseURL: \"http://localhost:5000/api/v1/\"\n});\n\ndeclare module \"axios\" {\n  export interface AxiosRequestConfig {\n    delayed?: boolean | number;\n  }\n}\n\n// type CustomAxiosRequestConfig = AxiosRequestConfig & { delayed?: boolean };\n\naxios.interceptors.request.use(config => {\n  console.log(config);\n\n  if (config.delayed) {\n    return new Promise(resolve =>\n      setTimeout(\n        () => resolve(config),\n        config.delayed === true\n          ? 600\n          : config.delayed === false\n          ? 0\n          : config.delayed\n      )\n    );\n  }\n  return config;\n});\n\nconfigure({ axios });\n\nexport default axios;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\n\nimport \"./axios\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}