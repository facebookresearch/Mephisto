"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[4795],{4127:function(e,o,n){n.d(o,{Zo:function(){return m},kt:function(){return f}});var r=n(1987);function t(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function i(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?i(Object(n),!0).forEach((function(o){t(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function s(e,o){if(null==e)return{};var n,r,t=function(e,o){if(null==e)return{};var n,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],o.indexOf(n)>=0||(t[n]=e[n]);return t}(e,o);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var c=r.createContext({}),l=function(e){var o=r.useContext(c),n=o;return e&&(n="function"==typeof e?e(o):a(a({},o),e)),n},m=function(e){var o=l(e.components);return r.createElement(c.Provider,{value:o},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var o=e.children;return r.createElement(r.Fragment,{},o)}},d=r.forwardRef((function(e,o){var n=e.components,t=e.mdxType,i=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=t,f=p["".concat(c,".").concat(d)]||p[d]||u[d]||i;return n?r.createElement(f,a(a({ref:o},m),{},{components:n})):r.createElement(f,a({ref:o},m))}));function f(e,o){var n=arguments,t=o&&o.mdxType;if("string"==typeof e||t){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in o)hasOwnProperty.call(o,c)&&(s[c]=o[c]);s.originalType=e,s[p]="string"==typeof e?e:t,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5998:function(e,o,n){n.r(o),n.d(o,{assets:function(){return m},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var r=n(9375),t=n(8933),i=(n(1987),n(4127)),a=["components"],s={sidebar_position:2},c="Run FormComposer tasks",l={unversionedId:"guides/how_to_use/form_composer/running",id:"guides/how_to_use/form_composer/running",title:"Run FormComposer tasks",description:"To create and launch a FormComposer task, first create your JSON form configuration,",source:"@site/docs/guides/how_to_use/form_composer/running.md",sourceDirName:"guides/how_to_use/form_composer",slug:"/guides/how_to_use/form_composer/running",permalink:"/docs/guides/how_to_use/form_composer/running",draft:!1,editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/guides/how_to_use/form_composer/running.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"guides",previous:{title:"FormComposer overview",permalink:"/docs/guides/how_to_use/form_composer/overview"},next:{title:"Config files reference",permalink:"/docs/guides/how_to_use/form_composer/configuration/config_files"}},m={},p=[{value:"With docker-compose",id:"with-docker-compose",level:4},{value:"Without docker-compose",id:"without-docker-compose",level:4}],u={toc:p};function d(e){var o=e.components,n=(0,t.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"run-formcomposer-tasks"},"Run FormComposer tasks"),(0,i.kt)("p",null,"To create and launch a FormComposer task, first create your JSON form configuration,\nand then run the below commands."),(0,i.kt)("p",null,"Once your Task launches, your console will display you URLs like this: ",(0,i.kt)("inlineCode",{parentName:"p"},"http://<YOUR_DOMAIN>/?worker_id=x&assignment_id=1"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If you're doing local testing with ",(0,i.kt)("inlineCode",{parentName:"li"},"local")," architect and ",(0,i.kt)("inlineCode",{parentName:"li"},"inhouse")," provider, your URLs will start with ",(0,i.kt)("inlineCode",{parentName:"li"},"http://localhost:3000/"),". To access your Task units as a worker, just paste one of these URLs into your browser.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"If running with Docker, you will need to replace port ",(0,i.kt)("inlineCode",{parentName:"em"},"3000")," in the console URLs with the remapped port (e.g. for ",(0,i.kt)("inlineCode",{parentName:"em"},"3001:3000")," it will be ",(0,i.kt)("inlineCode",{parentName:"em"},"3001"),").")))),(0,i.kt)("li",{parentName:"ul"},"If you're running with a \"real\" provider, to access your Task units you will need to log into the provider's platform as a worker, and find them there.")),(0,i.kt)("h4",{id:"with-docker-compose"},"With docker-compose"),(0,i.kt)("p",null,"You can launch FormComposer inside a Docker container:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Prepare configs using ",(0,i.kt)("a",{parentName:"li",href:"/docs/guides/how_to_use/form_composer/configuration/form_composer_config_command/"},(0,i.kt)("inlineCode",{parentName:"a"},"form_composer config")," command"),":")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose -f docker/docker-compose.dev.yml run \\\n    --build \\\n    --rm mephisto_dc \\\n    mephisto form_composer config --extrapolate-token-sets\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Run composer itself using ",(0,i.kt)("inlineCode",{parentName:"li"},"form_composer")," command:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose -f docker/docker-compose.dev.yml run \\\n    --build \\\n    --publish 8081:8000 \\\n    --publish 3001:3000 \\\n    --rm mephisto_dc \\\n    mephisto form_composer\n")),(0,i.kt)("h4",{id:"without-docker-compose"},"Without docker-compose"),(0,i.kt)("p",null,"First ensure that mephisto package is installed locally - please refer to ",(0,i.kt)("a",{parentName:"p",href:"https://mephisto.ai/docs/guides/quickstart/"},"Mephisto's main doc"),".\nOnce that is done, run ",(0,i.kt)("a",{parentName:"p",href:"/docs/guides/how_to_use/form_composer/configuration/form_composer_config_command/"},(0,i.kt)("inlineCode",{parentName:"a"},"form_composer config")," command")," if needed, followed by ",(0,i.kt)("inlineCode",{parentName:"p"},"form_composer")," command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'# Configure command (for details, see "form_composer config command" page)\nmephisto form_composer config --extrapolate-token-sets\n\n# Run commands\nmephisto form_composer\nmephisto form_composer --task-data-config-only\nmephisto form_composer --conf my-yaml-config\n')),(0,i.kt)("p",null,"where"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-o/--task-data-config-only")," - validate only final data config"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-c/--conf")," - YAML config name (analog of ",(0,i.kt)("inlineCode",{parentName:"li"},"conf")," option in raw python run script)")))}d.isMDXComponent=!0}}]);