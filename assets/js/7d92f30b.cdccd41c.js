"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[9293],{4127:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(1987);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3063:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var n=r(9375),o=r(8933),i=(r(1987),r(4127)),a=["components"],s={sidebar_position:6},l="Form rendering callbacks",c={unversionedId:"guides/how_to_use/form_composer/configuration/form_callbacks",id:"guides/how_to_use/form_composer/configuration/form_callbacks",title:"Form rendering callbacks",description:'During rendering of a Task in the browser, we may send calls to the server-side for additional data. In Mephisto, API views servicing such requests are called "remote procedures".',source:"@site/docs/guides/how_to_use/form_composer/configuration/form_callbacks.md",sourceDirName:"guides/how_to_use/form_composer/configuration",slug:"/guides/how_to_use/form_composer/configuration/form_callbacks",permalink:"/docs/guides/how_to_use/form_composer/configuration/form_callbacks",draft:!1,editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/guides/how_to_use/form_composer/configuration/form_callbacks.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"guides",previous:{title:"FormComposer configuration",permalink:"/docs/guides/how_to_use/form_composer/configuration/setup"},next:{title:"Using code insertions",permalink:"/docs/guides/how_to_use/form_composer/configuration/insertions"}},u={},p=[{value:"Presigned S3 URLs",id:"presigned-s3-urls",level:2},{value:"Custom callbacks",id:"custom-callbacks",level:2}],d={toc:p};function m(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"form-rendering-callbacks"},"Form rendering callbacks"),(0,i.kt)("p",null,'During rendering of a Task in the browser, we may send calls to the server-side for additional data. In Mephisto, API views servicing such requests are called "remote procedures".'),(0,i.kt)("h2",{id:"presigned-s3-urls"},"Presigned S3 URLs"),(0,i.kt)("p",null,"An example of a remote procedure that gets called during the initial form loading, is ",(0,i.kt)("inlineCode",{parentName:"p"},"getPresignedUrl")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"getMultiplePresignedUrls")," functions. These functions allow to generate short-lived S3 URLs, in order to limit exposure of sensitive resources."),(0,i.kt)("p",null,"The below command auto-generates config token values that presign themselves during rendering of the Task page:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'mephisto form_composer config --update-file-location-values "https://s3.amazonaws.com/..." --use_presigned_urls\n')),(0,i.kt)("p",null,"This is how URL pre-signing works:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'When a worker opens the Task page and the form HTML is generated, it will contain so-called "procedure tokens", i.e. token values that look like this: ',(0,i.kt)("inlineCode",{parentName:"li"},"{{getMultiplePresignedUrls(<S3_FILE_URL>)}}"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'the "wrapper" part of a procedure token is the name of a Javascript function that will render itself dynamically (e.g. by calling some remote API to receive additional data)'),(0,i.kt)("li",{parentName:"ul"},"the argument part is the argument value provided suring the function call"))),(0,i.kt)("li",{parentName:"ul"},"As soon as the form HTML is in place, the remote procedure gets called"),(0,i.kt)("li",{parentName:"ul"},"Mephisto's predefined remote procedure generates presigned URL, and its expiration starts ticking")),(0,i.kt)("p",null,"Presigned S3 URLs use the following environment variables:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Required: valid AWS credentials: ",(0,i.kt)("inlineCode",{parentName:"li"},"AWS_ACCESS_KEY_ID"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"AWS_SECRET_ACCESS_KEY"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"AWS_DEFAULT_REGION"),"\n(",(0,i.kt)("inlineCode",{parentName:"li"},"form_composer config")," command)"),(0,i.kt)("li",{parentName:"ul"},"Optional: URL expiration time ",(0,i.kt)("inlineCode",{parentName:"li"},"S3_URL_EXPIRATION_MINUTES")," (if missing the default value is 60 minutes)")),(0,i.kt)("h2",{id:"custom-callbacks"},"Custom callbacks"),(0,i.kt)("p",null,"You can write your own remote procedures. A good place to start is looking at how S3 URL presigning is implemented in the ",(0,i.kt)("inlineCode",{parentName:"p"},"examples/form_composer_demo")," example project."))}m.isMDXComponent=!0}}]);