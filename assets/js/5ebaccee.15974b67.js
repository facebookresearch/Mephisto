"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[657],{4127:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var o=n(1987);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||r;return n?o.createElement(f,i(i({ref:t},u),{},{components:n})):o.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},477:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var o=n(9375),a=n(8933),r=(n(1987),n(4127)),i=["components"],s={sidebar_position:3},c="`video_annotator config` command",l={unversionedId:"guides/how_to_use/video_annotator/configuration/video_annotator_config_command",id:"guides/how_to_use/video_annotator/configuration/video_annotator_config_command",title:"`video_annotator config` command",description:"The video_annotator config utility command helps auto-generate VideoAnnotator config. It supports several options:",source:"@site/docs/guides/how_to_use/video_annotator/configuration/video_annotator_config_command.md",sourceDirName:"guides/how_to_use/video_annotator/configuration",slug:"/guides/how_to_use/video_annotator/configuration/video_annotator_config_command",permalink:"/docs/guides/how_to_use/video_annotator/configuration/video_annotator_config_command",draft:!1,editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/guides/how_to_use/video_annotator/configuration/video_annotator_config_command.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"guides",previous:{title:"Multiple annotator versions",permalink:"/docs/guides/how_to_use/video_annotator/configuration/multiple_annotator_versions"},next:{title:"VideoAnnotator configuration",permalink:"/docs/guides/how_to_use/video_annotator/configuration/setup"}},u={},d=[{value:"Shortcut commands",id:"shortcut-commands",level:2}],p={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"video_annotator-config-command"},(0,r.kt)("inlineCode",{parentName:"h1"},"video_annotator config")," command"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"video_annotator config")," utility command helps auto-generate VideoAnnotator config. It supports several options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'# Sample launching commands\nmephisto video_annotator config\nmephisto video_annotator config --update-file-location-values "https://s3.amazonaws.com/..." --use_presigned_urls\nmephisto video_annotator config --update-file-location-values "https://s3.amazonaws.com/..."\nmephisto video_annotator config --permutate-separate-tokens\nmephisto video_annotator config --extrapolate-token-sets\nmephisto video_annotator config --verify\n# Parameters that work together\nmephisto video_annotator config --directory /my/own/path/to/data/ --verify\nmephisto video_annotator config --directory /my/own/path/to/data/ --extrapolate-token-sets\nmephisto video_annotator config --update-file-location-values "https://s3.amazonaws.com/..."\n')),(0,r.kt)("p",null,"where"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-d/--directory")," - a ",(0,r.kt)("strong",{parentName:"li"},"modifier")," for all ",(0,r.kt)("inlineCode",{parentName:"li"},"video_annotator config")," command options that specifies the directory where all annotator JSON config files are located (if missing the default is ",(0,r.kt)("inlineCode",{parentName:"li"},"mephisto/generators/video_annotator/data")," directory)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-v/--verify")," - if truthy, validates all JSON configs currently present in the annotator builder config directory"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-p/--permutate-sepatate-tokens")," - if truthy, generates token sets values as all possible combinations of values of individual tokens"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-f/--update-file-location-values S3_FOLDER_URL")," - generates token values based on file names found within the specified S3 folder (see a separate section about this mode of running VideoAnnotator)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-e/--extrapolate-token-sets")," - if truthy, generates Task data config based on provided annotator config and token sets values"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-u/--use-presigned-urls")," - a ",(0,r.kt)("strong",{parentName:"li"},"modifier")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"--update-file-location-values"),' command that converts S3 URLs into short-lived rtemporary ones (for more detailes see "Presigned URLs" section)')),(0,r.kt)("h2",{id:"shortcut-commands"},"Shortcut commands"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"mephisto video_annotator config")," executes the following commands in one step:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"mephisto video_annotator config --permutate-separate-tokens\nmephisto video_annotator config --extrapolate-token-sets\nmephisto video_annotator config --verify\n")))}m.isMDXComponent=!0}}]);