"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[5128],{4127:function(t,e,r){r.d(e,{Zo:function(){return f},kt:function(){return g}});var a=r(1987);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function p(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},l=Object.keys(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var o=a.createContext({}),d=function(t){var e=a.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},f=function(t){var e=d(t.components);return a.createElement(o.Provider,{value:e},t.children)},m="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},N=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,l=t.originalType,o=t.parentName,f=p(t,["components","mdxType","originalType","parentName"]),m=d(r),N=n,g=m["".concat(o,".").concat(N)]||m[N]||k[N]||l;return r?a.createElement(g,i(i({ref:e},f),{},{components:r})):a.createElement(g,i({ref:e},f))}));function g(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=r.length,i=new Array(l);i[0]=N;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p[m]="string"==typeof t?t:n,i[1]=p;for(var d=2;d<l;d++)i[d]=r[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}N.displayName="MDXCreateElement"},6067:function(t,e,r){r.r(e),r.d(e,{assets:function(){return f},contentTitle:function(){return o},default:function(){return N},frontMatter:function(){return p},metadata:function(){return d},toc:function(){return m}});var a=r(9375),n=r(8933),l=(r(1987),r(4127)),i=["components"],p={},o="Architects",d={unversionedId:"reference/architects",id:"reference/architects",title:"Architects",description:"Architects contain the logic surrounding deploying a server that workers will be able to access.",source:"@site/docs/reference/architects.md",sourceDirName:"reference",slug:"/reference/architects",permalink:"/docs/reference/architects",draft:!1,editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/reference/architects.md",tags:[],version:"current",frontMatter:{},sidebar:"reference",previous:{title:"Overview",permalink:"/docs/reference/overview"},next:{title:"Blueprints",permalink:"/docs/reference/blueprints"}},f={},m=[{value:"ec2",id:"ec2",level:2},{value:"mock",id:"mock",level:2},{value:"local",id:"local",level:2},{value:"heroku",id:"heroku",level:2}],k={toc:m};function N(t){var e=t.components,r=(0,n.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},k,r,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"architects"},"Architects"),(0,l.kt)("p",null,"Architects contain the logic surrounding deploying a server that workers will be able to access."),(0,l.kt)("h2",{id:"ec2"},"ec2"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"dest"),(0,l.kt)("th",{parentName:"tr",align:"left"},"type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"help"),(0,l.kt)("th",{parentName:"tr",align:"left"},"choices"),(0,l.kt)("th",{parentName:"tr",align:"left"},"required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"server_type"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"node"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"server_source_path"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"???"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Optional path to a prepared server directory containing everything needed to run a server of the given type. Overrides server type."),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"instance_type"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"t2.micro"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Instance type to run router"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"subdomain"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The task name defined in your task's hydra config"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Subdomain name for routing"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"profile_name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"???"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Profile name for deploying an ec2 instance"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")))),(0,l.kt)("h2",{id:"mock"},"mock"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"dest"),(0,l.kt)("th",{parentName:"tr",align:"left"},"type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"help"),(0,l.kt)("th",{parentName:"tr",align:"left"},"choices"),(0,l.kt)("th",{parentName:"tr",align:"left"},"required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"server_type"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"node"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"server_source_path"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"???"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Optional path to a prepared server directory containing everything needed to run a server of the given type. Overrides server type."),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"should_run_server"),(0,l.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Addressible location of the server"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"port"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"3000"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Port to launch the server on"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")))),(0,l.kt)("h2",{id:"local"},"local"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"dest"),(0,l.kt)("th",{parentName:"tr",align:"left"},"type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"help"),(0,l.kt)("th",{parentName:"tr",align:"left"},"choices"),(0,l.kt)("th",{parentName:"tr",align:"left"},"required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"server_type"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"node"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"server_source_path"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"???"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Optional path to a prepared server directory containing everything needed to run a server of the given type. Overrides server type."),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"hostname"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"localhost"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Addressible location of the server"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"port"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"3000"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Port to launch the server on"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")))),(0,l.kt)("h2",{id:"heroku"},"heroku"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"dest"),(0,l.kt)("th",{parentName:"tr",align:"left"},"type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"help"),(0,l.kt)("th",{parentName:"tr",align:"left"},"choices"),(0,l.kt)("th",{parentName:"tr",align:"left"},"required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"server_type"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"node"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"server_source_path"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str"),(0,l.kt)("td",{parentName:"tr",align:"left"},"???"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Optional path to a prepared server directory containing everything needed to run a server of the given type. Overrides server type."),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"use_hobby"),(0,l.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Launch on the Heroku Hobby tier"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"heroku_team"),(0,l.kt)("td",{parentName:"tr",align:"left"},"unknown"),(0,l.kt)("td",{parentName:"tr",align:"left"},"???"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Heroku team to use for this launch"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"heroku_app_name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"unknown"),(0,l.kt)("td",{parentName:"tr",align:"left"},"???"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Heroku app name to use for this launch"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"heroku_config_args"),(0,l.kt)("td",{parentName:"tr",align:"left"},"unknown"),(0,l.kt)("td",{parentName:"tr",align:"left"},"{}"),(0,l.kt)("td",{parentName:"tr",align:"left"},"str:str dict containing all heroku config variables to set for the app"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False")))))}N.isMDXComponent=!0}}]);