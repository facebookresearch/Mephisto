"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[5665],{4127:function(e,o,r){r.d(o,{Zo:function(){return f},kt:function(){return d}});var t=r(1987);function n(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function i(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?i(Object(r),!0).forEach((function(o){n(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function a(e,o){if(null==e)return{};var r,t,n=function(e,o){if(null==e)return{};var r,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],o.indexOf(r)>=0||(n[r]=e[r]);return n}(e,o);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=t.createContext({}),u=function(e){var o=t.useContext(c),r=o;return e&&(r="function"==typeof e?e(o):s(s({},o),e)),r},f=function(e){var o=u(e.components);return t.createElement(c.Provider,{value:o},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},p=t.forwardRef((function(e,o){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,f=a(e,["components","mdxType","originalType","parentName"]),l=u(r),p=n,d=l["".concat(c,".").concat(p)]||l[p]||m[p]||i;return r?t.createElement(d,s(s({ref:o},f),{},{components:r})):t.createElement(d,s({ref:o},f))}));function d(e,o){var r=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=p;var a={};for(var c in o)hasOwnProperty.call(o,c)&&(a[c]=o[c]);a.originalType=e,a[l]="string"==typeof e?e:n,s[1]=a;for(var u=2;u<i;u++)s[u]=r[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4834:function(e,o,r){r.r(o),r.d(o,{assets:function(){return f},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return l}});var t=r(9375),n=r(8933),i=(r(1987),r(4127)),s=["components"],a={sidebar_position:5},c="FormComposer configuration",u={unversionedId:"guides/how_to_use/form_composer/configuration/setup",id:"guides/how_to_use/form_composer/configuration/setup",title:"FormComposer configuration",description:"FormComposer tasks are fully defined by their configuration files. These files comprise:",source:"@site/docs/guides/how_to_use/form_composer/configuration/setup.md",sourceDirName:"guides/how_to_use/form_composer/configuration",slug:"/guides/how_to_use/form_composer/configuration/setup",permalink:"/docs/guides/how_to_use/form_composer/configuration/setup",draft:!1,editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/guides/how_to_use/form_composer/configuration/setup.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"guides",previous:{title:"`form_composer_config` command",permalink:"/docs/guides/how_to_use/form_composer/configuration/form_composer_config_command"},next:{title:"Form rendering callbacks",permalink:"/docs/guides/how_to_use/form_composer/configuration/form_callbacks"}},f={},l=[],m={toc:l};function p(e){var o=e.components,r=(0,n.Z)(e,s);return(0,i.kt)("wrapper",(0,t.Z)({},m,r,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"formcomposer-configuration"},"FormComposer configuration"),(0,i.kt)("p",null,"FormComposer tasks are fully defined by their configuration files. These files comprise:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The main JSON file ",(0,i.kt)("inlineCode",{parentName:"li"},"task_data.json")," that specifies all fields across all form versions (their visual layout, validators, etc)"),(0,i.kt)("li",{parentName:"ul"},"Auxiliary JSON files (such as ",(0,i.kt)("inlineCode",{parentName:"li"},"token_sets_values_config.json"),") that specifies certain parts of the main config (e.g. only variable parts varing between form versions). The main JSON file is construvted out of these by using ",(0,i.kt)("inlineCode",{parentName:"li"},"mephisto form_composer")," CLI command."),(0,i.kt)("li",{parentName:"ul"},"Custom pieces of code specified in a special ",(0,i.kt)("inlineCode",{parentName:"li"},"insertions")," subdirectory, such as HTML content of lengthy form instructions.")),(0,i.kt)("p",null,"The structure and purpose of these files is detailed further in other sections:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/guides/how_to_use/form_composer/configuration/config_files/"},"Config files reference")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/guides/how_to_use/form_composer/configuration/multiple_form_versions/"},"Using multiple form versions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/guides/how_to_use/form_composer/configuration/form_composer_config_command/"},"form_composer_config command")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/guides/how_to_use/form_composer/configuration/insertions/"},"Using code insertions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/guides/how_to_use/form_composer/configuration/form_callbacks/"},"Form rendering callbacks"))),(0,i.kt)("p",null,"To test the effect of configuration changes on a finished Task, you can use working FormComposer examples in the ",(0,i.kt)("inlineCode",{parentName:"p"},"examples/form_composer_demo/data")," directory."))}p.isMDXComponent=!0}}]);