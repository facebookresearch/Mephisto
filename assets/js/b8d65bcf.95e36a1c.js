"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[6454],{4127:function(e,o,t){t.d(o,{Zo:function(){return p},kt:function(){return d}});var r=t(1987);function n(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function i(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?i(Object(t),!0).forEach((function(o){n(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function s(e,o){if(null==e)return{};var t,r,n=function(e,o){if(null==e)return{};var t,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],o.indexOf(t)>=0||(n[t]=e[t]);return n}(e,o);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=r.createContext({}),m=function(e){var o=r.useContext(c),t=o;return e&&(t="function"==typeof e?e(o):a(a({},o),e)),t},p=function(e){var o=m(e.components);return r.createElement(c.Provider,{value:o},e.children)},l="mdxType",f={inlineCode:"code",wrapper:function(e){var o=e.children;return r.createElement(r.Fragment,{},o)}},u=r.forwardRef((function(e,o){var t=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=m(t),u=n,d=l["".concat(c,".").concat(u)]||l[u]||f[u]||i;return t?r.createElement(d,a(a({ref:o},p),{},{components:t})):r.createElement(d,a({ref:o},p))}));function d(e,o){var t=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var i=t.length,a=new Array(i);a[0]=u;var s={};for(var c in o)hasOwnProperty.call(o,c)&&(s[c]=o[c]);s.originalType=e,s[l]="string"==typeof e?e:n,a[1]=s;for(var m=2;m<i;m++)a[m]=t[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2363:function(e,o,t){t.r(o),t.d(o,{assets:function(){return p},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return s},metadata:function(){return m},toc:function(){return l}});var r=t(9375),n=t(8933),i=(t(1987),t(4127)),a=["components"],s={sidebar_position:3},c="`form_composer_config` command",m={unversionedId:"guides/how_to_use/form_composer/configuration/form_composer_config_command",id:"guides/how_to_use/form_composer/configuration/form_composer_config_command",title:"`form_composer_config` command",description:"The formcomposerconfig utility command helps auto-generate FormComposer config. It supports several options:",source:"@site/docs/guides/how_to_use/form_composer/configuration/form_composer_config_command.md",sourceDirName:"guides/how_to_use/form_composer/configuration",slug:"/guides/how_to_use/form_composer/configuration/form_composer_config_command",permalink:"/docs/guides/how_to_use/form_composer/configuration/form_composer_config_command",draft:!1,editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/guides/how_to_use/form_composer/configuration/form_composer_config_command.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"guides",previous:{title:"Multiple form versions",permalink:"/docs/guides/how_to_use/form_composer/configuration/multiple_form_versions"},next:{title:"FormComposer configuration",permalink:"/docs/guides/how_to_use/form_composer/configuration/setup"}},p={},l=[],f={toc:l};function u(e){var o=e.components,t=(0,n.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,t,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"form_composer_config-command"},(0,i.kt)("inlineCode",{parentName:"h1"},"form_composer_config")," command"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"form_composer_config")," utility command helps auto-generate FormComposer config. It supports several options:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'# Sample launching commands\nmephisto form_composer_config --update-file-location-values "https://s3.amazonaws.com/..." --use_presigned_urls\nmephisto form_composer_config --update-file-location-values "https://s3.amazonaws.com/..."\nmephisto form_composer_config --permutate-separate-tokens\nmephisto form_composer_config --extrapolate-token-sets\nmephisto form_composer_config --verify\n# Parameters that work together\nmephisto form_composer_config --directory /my/own/path/to/data/ --verify\nmephisto form_composer_config --directory /my/own/path/to/data/ --extrapolate-token-sets\nmephisto form_composer_config --update-file-location-values "https://s3.amazonaws.com/..."\n')),(0,i.kt)("p",null,"where"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-d/--directory")," - a ",(0,i.kt)("strong",{parentName:"li"},"modifier")," for all ",(0,i.kt)("inlineCode",{parentName:"li"},"form_composer_config")," command options that specifies the directory where all form JSON config files are located (if missing the default is ",(0,i.kt)("inlineCode",{parentName:"li"},"mephisto/generators/form_composer/data")," directory)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-v/--verify")," - if truthy, validates all JSON configs currently present in the form builder config directory"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-p/--permutate-sepatate-tokens")," - if truthy, generates token sets values as all possible combinations of values of individual tokens"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-f/--update-file-location-values S3_FOLDER_URL")," - generates token values based on file names found within the specified S3 folder (see a separate section about this mode of running FormComposer)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-e/--extrapolate-token-sets")," - if truthy, generates Task data config based on provided form config and takon sets values"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-u/--use-presigned-urls")," - a ",(0,i.kt)("strong",{parentName:"li"},"modifier")," for ",(0,i.kt)("inlineCode",{parentName:"li"},"--update-file-location-values"),' command that converts S3 URLs into short-lived rtemporary ones (for more detailes see "Presigned URLs" section)')))}u.isMDXComponent=!0}}]);