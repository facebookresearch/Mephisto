"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[8122],{4127:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return h}});var a=t(1987);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),m=o,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return t?a.createElement(h,r(r({ref:n},p),{},{components:t})):a.createElement(h,r({ref:n},p))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:o,r[1]=l;for(var u=2;u<i;u++)r[u]=t[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4238:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var a=t(9375),o=t(8933),i=(t(1987),t(4127)),r=["components"],l={sidebar_position:1},s="How task run works",u={unversionedId:"guides/how_to_use/task_creation/task_run",id:"guides/how_to_use/task_creation/task_run",title:"How task run works",description:"Let's understand basic components of the task launch, such as configs and the run_task.py script. This will help with customization of tash launch behaviors.",source:"@site/docs/guides/how_to_use/task_creation/task_run.md",sourceDirName:"guides/how_to_use/task_creation",slug:"/guides/how_to_use/task_creation/task_run",permalink:"/docs/guides/how_to_use/task_creation/task_run",draft:!1,editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/guides/how_to_use/task_creation/task_run.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"guides",previous:{title:"Developing and debugging frontends",permalink:"/docs/guides/how_to_use/task_creation/developing_frontends"},next:{title:"Hosting task assets",permalink:"/docs/guides/how_to_use/task_creation/hosting_assets"}},p={},c=[{value:"3.1 Config registration",id:"31-config-registration",level:3},{value:"3.2 Invoking Mephisto",id:"32-invoking-mephisto",level:3},{value:"3.3 Default abstraction usage",id:"33-default-abstraction-usage",level:3},{value:"3.4 <code>Unit</code> creation explained",id:"34-unit-creation-explained",level:3}],d={toc:c};function m(e){var n=e.components,t=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-task-run-works"},"How task run works"),(0,i.kt)("p",null,"Let's understand basic components of the task launch, such as configs and the ",(0,i.kt)("inlineCode",{parentName:"p"},"run_task.py")," script. This will help with customization of tash launch behaviors."),(0,i.kt)("h3",{id:"31-config-registration"},"3.1 Config registration"),(0,i.kt)("p",null,"Mephisto wires up to configuration using standard Hydra syntax, but with both ",(0,i.kt)("inlineCode",{parentName:"p"},"yaml")," files (for ease of writing) ",(0,i.kt)("em",{parentName:"p"},"and")," structured configs (for ease of documentation).\nHere's the config we've set up for this example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'# examples/form_composer_demo/run_task.py\nimport os\n\nfrom omegaconf import DictConfig\n\nfrom mephisto.operations.operator import Operator\nfrom mephisto.tools.scripts import build_custom_bundle\nfrom mephisto.tools.scripts import task_script\n\n\n@task_script(default_config_file="example_local_mock")\ndef main(operator: Operator, cfg: DictConfig) -> None:\n')),(0,i.kt)("p",null,"This is all you really ",(0,i.kt)("em",{parentName:"p"},"need")," to launch a Mephisto task! The ",(0,i.kt)("inlineCode",{parentName:"p"},"@task_script")," decorator does the job of attaching your hydra yaml as default arguments for the main."),(0,i.kt)("p",null,"Of course, there's quite a bit of 'magic' happening underneath the hood thanks to the script utilities.\nThis version is explicit to show where you may add customization, and re-ordered for understanding:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# modified examples/form_composer_demo/run_task.py\nimport os\nfrom dataclasses import dataclass\nfrom typing import Any\n\nfrom omegaconf import DictConfig\n\nfrom mephisto.operations.operator import Operator\nfrom mephisto.operations.hydra_config import build_default_task_config\nfrom mephisto.tools.scripts import build_custom_bundle\nfrom mephisto.tools.scripts import task_script\n\n@dataclass\nclass MyTaskConfig(build_default_task_config('example_local_mock')):\n    custom_args: Any = 4\n\n@task_script(config=MyTaskConfig)\ndef main(operator: Operator, cfg: DictConfig) -> None:\n")),(0,i.kt)("p",null,"In this snippet, we do a few things:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"We set up the default ",(0,i.kt)("a",{parentName:"li",href:"https://hydra.cc/docs/tutorials/basic/your_first_app/config_file/"},(0,i.kt)("inlineCode",{parentName:"a"},"conf"))," file to be ",(0,i.kt)("inlineCode",{parentName:"li"},"example_local_mock"),",\nusing ",(0,i.kt)("inlineCode",{parentName:"li"},"build_default_task_config"),", which returns a ",(0,i.kt)("inlineCode",{parentName:"li"},"TaskConfig")," that we can extend."),(0,i.kt)("li",{parentName:"ol"},"We extend the returned ",(0,i.kt)("inlineCode",{parentName:"li"},"TaskConfig")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"MyTaskConfig"),", which allows us to specify custom arguments."),(0,i.kt)("li",{parentName:"ol"},"We decorate the main, noting that the correct config is ",(0,i.kt)("inlineCode",{parentName:"li"},"MyTaskConfig"),".\nNote that the ",(0,i.kt)("inlineCode",{parentName:"li"},"default_config_file")," version of this simply takes care of the above steps inline in the decorator.")),(0,i.kt)("p",null,"With all the above, we're able to just make edits to ",(0,i.kt)("inlineCode",{parentName:"p"},"example_local_mock.yaml")," or make other configs in the ",(0,i.kt)("inlineCode",{parentName:"p"},"conf/")," directory and route to them directly."),(0,i.kt)("h3",{id:"32-invoking-mephisto"},"3.2 Invoking Mephisto"),(0,i.kt)("p",null,"Mephisto itself is actually invoked just a little later:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'@task_script(default_config_file="example_local_mock")\ndef main(operator: Operator, cfg: DictConfig) -> None:\n    # Build packages\n    _build_custom_bundles(cfg)\n\n    operator.launch_task_run(cfg.mephisto)\n    operator.wait_for_runs_then_shutdown(skip_input=True, log_rate=30)\n')),(0,i.kt)("p",null,"Under the hood the ",(0,i.kt)("inlineCode",{parentName:"p"},"task_script")," decorator extracts specific arguments out of your configuration\n(and surface warnings about incompatibilities) and initializes an ",(0,i.kt)("inlineCode",{parentName:"p"},"Operator")," on the correct ",(0,i.kt)("inlineCode",{parentName:"p"},"MephistoDB")," for the task.\nUsing this we can launch a ",(0,i.kt)("inlineCode",{parentName:"p"},"TaskRun")," the given config, then wait for it to run.\nTo ensure we're not frozen, the operator takes in a ",(0,i.kt)("inlineCode",{parentName:"p"},"log_rate")," in seconds to print status messages while the run is underway."),(0,i.kt)("h3",{id:"33-default-abstraction-usage"},"3.3 Default abstraction usage"),(0,i.kt)("p",null,"Again we can look back at the ",(0,i.kt)("inlineCode",{parentName:"p"},"example_local_mock.yaml")," file to see this setup:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# examples/form_composer_demo/hydra_configs/conf/example_local_mock.yaml\ndefaults:\n  - /mephisto/blueprint: static_react_task\n  - /mephisto/architect: local\n  - /mephisto/provider: mock\n")),(0,i.kt)("p",null,"These ensure that, when not provided other arguments, we launch this task locally using a ",(0,i.kt)("inlineCode",{parentName:"p"},"LocalArchitect")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"MockProvider"),'.\nWith these defaults, this and other example tasks are run using a "local" architect, and a "mock" requester without arguments.\nThe "local" architect is reponsible for running a server on your local machine to host the task,\nand the "mock" requester lets ',(0,i.kt)("em",{parentName:"p"},"you")," simulate a worker without using an external crowd-provider platform such as Prolific or MTurk to launch the task."),(0,i.kt)("h3",{id:"34-unit-creation-explained"},"3.4 ",(0,i.kt)("inlineCode",{parentName:"h3"},"Unit")," creation explained"),(0,i.kt)("p",null,"When stepping through this task the first time, you ended up working on two ",(0,i.kt)("inlineCode",{parentName:"p"},"Unit"),"s as two different ",(0,i.kt)("inlineCode",{parentName:"p"},"Worker"),"s.\nIt's useful to understand how this happens.\nTaking a look at the config and data:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# examples/form_composer_demo/hydra_configs/conf/example_local_mock.yaml\n\n#@package _global_\ndefaults:\n...\nmephisto:\n  ...\n  blueprint:\n    data_json: ${task_dir}/data/simple/task_data.json\n    ...\n    units_per_assignment: 1\n  task:\n    ...\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'// examples/form_composer_demo/data/simple/task_data.json\n\n[\n  {\n    "form": {\n      "title": "Form example",\n      "instruction": "Please answer all questions to the best of your ability as part of our study.",\n      "sections": [\n        {\n          "name": "section_about",\n          "title": "About you",\n          "instruction": "Please introduce yourself. We would like to know more about your background, personal information, etc.",\n          "fieldsets": [\n            {\n              "title": "Personal information",\n              "instruction": "",\n              "rows": [\n                {\n                  "fields": [\n                    {\n                      "help": "",\n                      "id": "id_name_first",\n                      "label": "First name",\n                      "name": "name_first",\n                      "placeholder": "Type first name",\n                      "tooltip": "Your first name",\n                      "type": "input",\n                      "validators": {\n                        "required": true,\n                        "minLength": 2,\n                        "maxLength": 20\n                      },\n                      "value": ""\n                    },\n                    {\n                      "help": "Optional",\n                      "id": "id_name_last",\n                      "label": "Last name",\n                      "name": "name_last",\n                      "placeholder": "Type last name",\n                      "tooltip": "Your last name",\n                      "type": "input",\n                      "validators": { "required": true },\n                      "value": ""\n                    }\n                  ],\n                  "help": "Please use your legal name"\n                },\n                {\n                  "fields": [\n                    {\n                      "help": "We may contact you later for additional information",\n                      "id": "id_email",\n                      "label": "Email address for Mephisto",\n                      "name": "email",\n                      "placeholder": "user@mephisto.ai",\n                      "tooltip": "Email address for Mephisto",\n                      "type": "email",\n                      "validators": {\n                        "required": true,\n                        "regexp": ["^[a-zA-Z0-9._-]+@mephisto\\\\.ai$", "ig"]\n                      },\n                      "value": ""\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              "title": "Cultural background",\n              "instruction": "Please tell us about your cultural affiliations and values that you use in your daily life.",\n              "rows": [\n                {\n                  "fields": [\n                    {\n                      "help": "Select country of your residence",\n                      "id": "id_country",\n                      "label": "Country",\n                      "multiple": false,\n                      "name": "country",\n                      "options": [\n                        {\n                          "label": "---",\n                          "value": ""\n                        },\n                        {\n                          "label": "United States of America",\n                          "value": "USA"\n                        },\n                        {\n                          "label": "Canada",\n                          "value": "CAN"\n                        }\n                      ],\n                      "placeholder": "",\n                      "tooltip": "Country",\n                      "type": "select",\n                      "validators": { "required": true },\n                      "value": ""\n                    },\n                    {\n                      "help": "Select language spoken in your local community",\n                      "id": "id_language",\n                      "label": "Language",\n                      "multiple": true,\n                      "name": "language",\n                      "options": [\n                        {\n                          "label": "English",\n                          "value": "en"\n                        },\n                        {\n                          "label": "French",\n                          "value": "fr"\n                        },\n                        {\n                          "label": "Spanish",\n                          "value": "es"\n                        },\n                        {\n                          "label": "Chinese",\n                          "value": "ch"\n                        }\n                      ],\n                      "placeholder": "",\n                      "tooltip": "Language",\n                      "type": "select",\n                      "validators": {\n                        "required": true,\n                        "minLength": 2,\n                        "maxLength": 3\n                      },\n                      "value": ""\n                    }\n                  ]\n                }\n              ],\n              "help": "This information will help us compile study statistics"\n            },\n            {\n              "title": "Additional information",\n              "instruction": "Optional details about you. You can fill out what you are most comfortable with.",\n              "rows": [\n                {\n                  "fields": [\n                    {\n                      "help": "",\n                      "id": "id_bio",\n                      "label": "Biography since age of 18",\n                      "name": "bio",\n                      "placeholder": "",\n                      "tooltip": "Your bio in a few paragraphs",\n                      "type": "textarea",\n                      "validators": { "required": false },\n                      "value": ""\n                    }\n                  ]\n                },\n                {\n                  "fields": [\n                    {\n                      "help": "",\n                      "id": "id_skills",\n                      "label": "Technical Skills",\n                      "name": "skills",\n                      "options": [\n                        {\n                          "checked": false,\n                          "label": "React",\n                          "value": "react"\n                        },\n                        {\n                          "checked": true,\n                          "label": "JavaScript",\n                          "value": "javascript"\n                        },\n                        {\n                          "checked": false,\n                          "label": "Python",\n                          "value": "python"\n                        },\n                        {\n                          "checked": false,\n                          "label": "SQL",\n                          "value": "sql"\n                        }\n                      ],\n                      "tooltip": "Technical skills you may possess",\n                      "type": "checkbox",\n                      "validators": {\n                        "required": true,\n                        "minLength": 2,\n                        "maxLength": 3\n                      }\n                    }\n                  ]\n                },\n                {\n                  "fields": [\n                    {\n                      "help": "",\n                      "id": "id_kids",\n                      "label": "How many children do you have?",\n                      "name": "kids",\n                      "options": [\n                        {\n                          "checked": false,\n                          "label": "None",\n                          "value": "0"\n                        },\n                        {\n                          "checked": false,\n                          "label": "One",\n                          "value": "1"\n                        },\n                        {\n                          "checked": false,\n                          "label": "Two",\n                          "value": "2"\n                        },\n                        {\n                          "checked": false,\n                          "label": "Three or more",\n                          "value": ">=3"\n                        }\n                      ],\n                      "tooltip": "How many children do you have?",\n                      "type": "radio",\n                      "validators": { "required": true }\n                    }\n                  ]\n                },\n                {\n                  "fields": [\n                    {\n                      "help": "",\n                      "id": "id_avatar",\n                      "label": "Profile Picture",\n                      "name": "avatar",\n                      "placeholder": "Select a file",\n                      "tooltip": "Your profile photo",\n                      "type": "file",\n                      "validators": { "required": true },\n                      "value": ""\n                    },\n                    {\n                      "help": "",\n                      "id": "id_resume",\n                      "label": "Resume",\n                      "name": "resume",\n                      "placeholder": "Select a file",\n                      "tooltip": "Your current resume",\n                      "type": "file",\n                      "validators": { "required": false },\n                      "value": ""\n                    }\n                  ]\n                }\n              ],\n              "help": "Some additional details about your persona"\n            }\n          ]\n        },\n        {\n          "name": "section_second",\n          "title": "Second section",\n          "instruction": "Example of another section",\n          "fieldsets": [\n            {\n              "title": "Motivation",\n              "instruction": "",\n              "rows": [\n                {\n                  "fields": [\n                    {\n                      "help": "",\n                      "id": "id_motto",\n                      "label": "Personal Motto",\n                      "name": "motto",\n                      "placeholder": "",\n                      "tooltip": "Your personal motto",\n                      "type": "input",\n                      "validators": { "required": true },\n                      "value": ""\n                    }\n                  ],\n                  "help": "Please type in your favorite personal motto"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      "submit_button": {\n        "text": "Submit",\n        "tooltip": "Submit form"\n      }\n    }\n  }\n]\n\n')),(0,i.kt)("p",null,"From this, we know we're loading from ",(0,i.kt)("inlineCode",{parentName:"p"},"task_data.json"),", and that this file only has one listed item.\nMephisto creates an ",(0,i.kt)("inlineCode",{parentName:"p"},"Assignment")," for each of these lines, representing a group of work for which a worker can only contribute to once.\nWe also specify two ",(0,i.kt)("inlineCode",{parentName:"p"},"units_per_assignment"),", meaning that Mephisto creates one ",(0,i.kt)("inlineCode",{parentName:"p"},"Unit"),"s per ",(0,i.kt)("inlineCode",{parentName:"p"},"Assignment"),",\nmeaning in this case that different workers can complete the same job, usually to get inter-annotator agreement.\n(In some cases Mephisto can use an ",(0,i.kt)("inlineCode",{parentName:"p"},"Assignment")," to connect multiple workers each with one ",(0,i.kt)("inlineCode",{parentName:"p"},"Unit")," on a collaborative live task).\nAs we had one assignment, it makes sense that each worker ",(0,i.kt)("inlineCode",{parentName:"p"},"x")," and your second worker could only complete one task each."))}m.isMDXComponent=!0}}]);