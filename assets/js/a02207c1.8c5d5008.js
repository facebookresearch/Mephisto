"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[2671],{4127:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(1987);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},k="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),k=p(n),m=i,c=k["".concat(o,".").concat(m)]||k[m]||d[m]||r;return n?a.createElement(c,l(l({ref:t},u),{},{components:n})):a.createElement(c,l({ref:t},u))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[k]="string"==typeof e?e:i,l[1]=s;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},90:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return k}});var a=n(9375),i=n(8933),r=(n(1987),n(4127)),l=["components"],s={sidebar_position:5},o="TaskReview app API",p={unversionedId:"guides/how_to_use/review_app/server_api",id:"guides/how_to_use/review_app/server_api",title:"TaskReview app API",description:"If you wish to customize or improve the TaskReview app, it's helpful to know how its UI and server parts interact.",source:"@site/docs/guides/how_to_use/review_app/server_api.md",sourceDirName:"guides/how_to_use/review_app",slug:"/guides/how_to_use/review_app/server_api",permalink:"/docs/guides/how_to_use/review_app/server_api",draft:!1,editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/guides/how_to_use/review_app/server_api.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"guides",previous:{title:"Enable Responses Histogram",permalink:"/docs/guides/how_to_use/review_app/enabling_responses_histogram"},next:{title:"TaskReview app flow",permalink:"/docs/guides/how_to_use/review_app/diagram"}},u={},k=[{value:"User flow",id:"user-flow",level:2},{value:"API endpoints",id:"api-endpoints",level:2},{value:"<code>GET /api/tasks</code>",id:"get-apitasks",level:3},{value:"<code>GET /api/tasks/{id}</code>",id:"get-apitasksid",level:3},{value:"<code>GET /api/tasks/{id}/export-results</code>",id:"get-apitasksidexport-results",level:3},{value:"<code>GET /api/tasks/{id}/{n_units}/export-results.json</code>",id:"get-apitasksidn_unitsexport-resultsjson",level:3},{value:"<code>GET /api/tasks/{id}/stats-results</code>",id:"get-apitasksidstats-results",level:3},{value:"<code>GET /api/tasks/{id}/timeline</code>",id:"get-apitasksidtimeline",level:3},{value:"<code>GET /api/tasks/{id}/worker-opinions</code>",id:"get-apitasksidworker-opinions",level:3},{value:"<code>GET /api/tasks/{id}/worker-units-ids</code>",id:"get-apitasksidworker-units-ids",level:3},{value:"<code>GET /api/qualifications?{worker_id=}</code>",id:"get-apiqualificationsworker_id",level:3},{value:"<code>POST /api/qualifications</code>",id:"post-apiqualifications",level:3},{value:"<code>GET /api/qualifications/{id}</code>",id:"get-apiqualificationsid",level:3},{value:"<code>PATCH /api/qualifications/{id}</code>",id:"patch-apiqualificationsid",level:3},{value:"<code>DELETE /api/qualifications/{id}</code>",id:"delete-apiqualificationsid",level:3},{value:"<code>GET /api/qualifications/{id}/details</code>",id:"get-apiqualificationsiddetails",level:3},{value:"<code>GET /api/qualifications/{id}/workers?{task_id=}</code>",id:"get-apiqualificationsidworkerstask_id",level:3},{value:"<code>POST /api/qualifications/{id}/workers/{worker_id}/grant</code>",id:"post-apiqualificationsidworkersworker_idgrant",level:3},{value:"<code>PATCH /api/qualifications/{id}/workers/{worker_id}/grant</code>",id:"patch-apiqualificationsidworkersworker_idgrant",level:3},{value:"<code>POST /api/qualifications/{id}/workers/{worker_id}/revoke</code>",id:"post-apiqualificationsidworkersworker_idrevoke",level:3},{value:"<code>PATCH /api/qualifications/{id}/workers/{worker_id}/revoke</code>",id:"patch-apiqualificationsidworkersworker_idrevoke",level:3},{value:"<code>GET /api/granted-qualifications?{qualification_id=}&amp;{sort=}</code>",id:"get-apigranted-qualificationsqualification_idsort",level:3},{value:"<code>GET /api/units?{task_id=}&amp;{unit_ids=}&amp;{completed=}</code>",id:"get-apiunitstask_idunit_idscompleted",level:3},{value:"<code>GET /api/units/details?{unit_ids=}</code>",id:"get-apiunitsdetailsunit_ids",level:3},{value:"<code>POST /api/units/approve</code>",id:"post-apiunitsapprove",level:3},{value:"<code>POST /api/units/reject</code>",id:"post-apiunitsreject",level:3},{value:"<code>POST /api/units/soft-reject</code>",id:"post-apiunitssoft-reject",level:3},{value:"<code>POST /api/workers/{id}/block</code>",id:"post-apiworkersidblock",level:3},{value:"<code>POST /api/workers/{id}/qualifications/grant</code>",id:"post-apiworkersidqualificationsgrant",level:3},{value:"<code>GET /api/workers/{id}/qualifications</code>",id:"get-apiworkersidqualifications",level:3},{value:"<code>GET /api/review-stats?{task_id=}&amp;{worker_id=}&amp;{since=}&amp;{limit=}</code>",id:"get-apireview-statstask_idworker_idsincelimit",level:3},{value:"<code>GET /api/units/{unit_id}/static/{filename}</code>",id:"get-apiunitsunit_idstaticfilename",level:3},{value:"Error response",id:"error-response",level:3}],d={toc:k};function m(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"taskreview-app-api"},"TaskReview app API"),(0,r.kt)("p",null,"If you wish to customize or improve the TaskReview app, it's helpful to know how its UI and server parts interact."),(0,r.kt)("h2",{id:"user-flow"},"User flow"),(0,r.kt)("p",null,"Here is a typical user journey through TaskReview app:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"UI gets list of available tasks from ",(0,r.kt)("inlineCode",{parentName:"li"},"GET /tasks")),(0,r.kt)("li",{parentName:"ul"},"User selects a task"),(0,r.kt)("li",{parentName:"ul"},"UI gets list of available qualifications from ",(0,r.kt)("inlineCode",{parentName:"li"},"GET /qualifications")),(0,r.kt)("li",{parentName:"ul"},"UI pulls all unit-worker id pairs from  ",(0,r.kt)("inlineCode",{parentName:"li"},"GET /tasks/{id}/worker-units-ids"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Due to the need to randomly shuffle units grouped by a worker (to mitigate reviewers bias, etc) we're implementing client-side, not server-side, pagination - client gets full list of all ids, creates a page of unit ids, and then pulls data for those specific units.")))),(0,r.kt)("li",{parentName:"ul"},"UI initiates units review by worker:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Group units by worker"),(0,r.kt)("li",{parentName:"ul"},"Sort workers by number of their units (fewest units go first)"),(0,r.kt)("li",{parentName:"ul"},"Pick them for review one-by-one"))),(0,r.kt)("li",{parentName:"ul"},"And then for each worker:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"UI pulls units by ids from ",(0,r.kt)("inlineCode",{parentName:"li"},"GET /units?unit_ids=[...]")),(0,r.kt)("li",{parentName:"ul"},"UI sorts units by ",(0,r.kt)("inlineCode",{parentName:"li"},"creation_date")," and pick them for review one-by-one",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"For each reviewed unit:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"UI pulls unit details from ",(0,r.kt)("inlineCode",{parentName:"li"},"GET /units/details?unit_ids=[...]")),(0,r.kt)("li",{parentName:"ul"},"UI pulls current stats from ",(0,r.kt)("inlineCode",{parentName:"li"},"GET /stats")," (for entire task and for worker within the task)"),(0,r.kt)("li",{parentName:"ul"},"UI renders unit's review representation in an iframe"),(0,r.kt)("li",{parentName:"ul"},"User can choose to reject/accept unit, grant/revoke qualification, and block the worker"))))))),(0,r.kt)("li",{parentName:"ul"},'When all units are reviewed, UI redirects user to the "Tasks" page'),(0,r.kt)("li",{parentName:"ul"},'User clicks "Show" button in "Stats" column to see hystograms if a Task has suitable data format for them'),(0,r.kt)("li",{parentName:"ul"},'User clicks "Open" button in "Chars" column to see Grafana dashboard to investigate a Task'),(0,r.kt)("li",{parentName:"ul"},'User clicks "Download" button for a reviewed Task',(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"UI pulls Task data from ",(0,r.kt)("inlineCode",{parentName:"li"},"GET /tasks/<task_id>/<n_units>/export-results.json")," endpoint")))),(0,r.kt)("h2",{id:"api-endpoints"},"API endpoints"),(0,r.kt)("p",null,"These are the API specs enabling TaskReview app UI."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apitasks"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/tasks")),(0,r.kt)("p",null,"Get all available tasks (to select one for review)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "tasks": [\n    {\n      "created_at": <timestamp>,\n      "has_stats": <bool>,\n      "id": <int>,\n      "is_reviewed": <bool>,\n      "name": <str>,\n      "unit_all_count": <int>,\n      "unit_completed_count": <int>,\n      "unit_finished_count": <int>\n    },\n    ...  // more tasks\n  ]\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apitasksid"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/tasks/{id}")),(0,r.kt)("p",null,"Get metadata for a task"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a task")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": <int>,\n  "name": <str>,\n  "type": <str>,\n  "created_at": <timestamp>\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apitasksidexport-results"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/tasks/{id}/export-results")),(0,r.kt)("p",null,"Compose on the server-side a single file with reviewed task results."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a task")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "file_created": <bool>,\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apitasksidn_unitsexport-resultsjson"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/tasks/{id}/{n_units}/export-results.json")),(0,r.kt)("p",null,"Serve a single composed file with reviewed task results."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a task"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"n_units")," - amount of units. Needed to clear cached file on server and return a new one")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":\nText file with JSON"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apitasksidstats-results"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/tasks/{id}/stats-results")),(0,r.kt)("p",null,"Assemble stats with results for a Task."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a task")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "stats": {\n    <str>: {\n      <str>: <str> | <int>, \n      ...\n    }, \n    ...\n  }, \n  "task_id": <str>, \n  "task_name": <str>, \n  "workers_count": <int>\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apitasksidtimeline"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/tasks/{id}/timeline")),(0,r.kt)("p",null,"Check if Grafana server is available and redirect or return error."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a task")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dashboard_url": <str> | null,\n  "server_is_available": <bool>,\n  "task_name": <str>,\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apitasksidworker-opinions"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/tasks/{id}/worker-opinions")),(0,r.kt)("p",null,"Returns all Worker Opinions related to a Task."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a task")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "task_name": <str>,\n  "worker_opinions": [\n    {\n      "data": {\n        "attachments": [\n          {\n            "destination": <str>,\n            "encoding": <str>,\n            "fieldname": <str>,\n            "filename": <str>,\n            "mimetype": <str>,\n            "originalname": <str>,\n            "path": <str>,\n            "size": <int>\n          },\n          ... // more attachments\n        ],\n        "questions": [\n          {\n            "answer": <str>,\n            "id": <str>,\n            "question": <str>,\n            "reviewed": <bool>,\n            "toxicity": <str> | null\n          },\n          ... // more questions\n        ]\n      },\n      "unit_data_folder": <str>,\n      "unit_id": <str>,\n      "worker_id": <str>\n    },\n    ... // more worker opinions\n  ]\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apitasksidworker-units-ids"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/tasks/{id}/worker-units-ids")),(0,r.kt)("p",null,"Get full, unpaginated list of unit IDs within a task (for subsequent client-side grouping by worker_id and ",(0,r.kt)("inlineCode",{parentName:"p"},"GET /task-units")," pagination)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a task")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "worker_units_ids": [\n    {\n      "worker_id": <int>,\n      "unit_id": <int>,\n    },\n    ...  // more ids\n  ]\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apiqualificationsworker_id"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/qualifications?{worker_id=}")),(0,r.kt)("p",null,'Get all available qualifications (to select "approve" and "reject" qualifications).'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"GET parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"worker_id")," - id of a worker, whom these qualification were granted to")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "qualifications": [\n    {\n      "creation_date": <str>,\n      "description": <str>,\n      "id": <int>,\n      "name": <str>,\n    },\n    ...  // more qualifications\n  ]\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"post-apiqualifications"},(0,r.kt)("inlineCode",{parentName:"h3"},"POST /api/qualifications")),(0,r.kt)("p",null,"Create a new qualification."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "description": <str>,\n  "name": <str>, // Required\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "creation_date": <str>,\n  "description": <str>,\n  "id": <int>,\n  "name": <str>,\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apiqualificationsid"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/qualifications/{id}")),(0,r.kt)("p",null,"Get metadata for a qualificaition."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a qualification")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "creation_date": <str>,\n  "description": <str>,\n  "id": <int>,\n  "name": <str>,\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"patch-apiqualificationsid"},(0,r.kt)("inlineCode",{parentName:"h3"},"PATCH /api/qualifications/{id}")),(0,r.kt)("p",null,"Update a qualification."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a qualification")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "description": <str>,\n  "name": <str>, // Required\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "creation_date": <str>,\n  "description": <str>,\n  "id": <int>,\n  "name": <str>,\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"delete-apiqualificationsid"},(0,r.kt)("inlineCode",{parentName:"h3"},"DELETE /api/qualifications/{id}")),(0,r.kt)("p",null,"Delete a qualificaition."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a qualification")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apiqualificationsiddetails"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/qualifications/{id}/details")),(0,r.kt)("p",null,"Get additional data about a qualification."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a qualification")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "granted_qualifications_count": <int>,\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apiqualificationsidworkerstask_id"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/qualifications/{id}/workers?{task_id=}")),(0,r.kt)("p",null,"Get list of all bearers of a qualification."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a qualification")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"GET parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"task_id")," - id of a task")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "workers": [\n    {\n      "worker_id": <int>,\n      "value": <int>,\n      "worker_review_id": <int>,  // latest grant of this qualification\n      "granted_at": <int>,   // maps to `worker_review.creation_date` column\n    },\n    ...  // more qualified workers\n  ]\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"post-apiqualificationsidworkersworker_idgrant"},(0,r.kt)("inlineCode",{parentName:"h3"},"POST /api/qualifications/{id}/workers/{worker_id}/grant")),(0,r.kt)("p",null,"Grant qualification to a worker."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a qualification"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"worker_id")," - id of a worker")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "unit_ids": [<int>, ...], // Required\n  "value": <int>,\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"patch-apiqualificationsidworkersworker_idgrant"},(0,r.kt)("inlineCode",{parentName:"h3"},"PATCH /api/qualifications/{id}/workers/{worker_id}/grant")),(0,r.kt)("p",null,"Update value of existing granted qualification."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a qualification"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"worker_id")," - id of a worker")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "explanation": <str>,\n  "value": <int>,\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"post-apiqualificationsidworkersworker_idrevoke"},(0,r.kt)("inlineCode",{parentName:"h3"},"POST /api/qualifications/{id}/workers/{worker_id}/revoke")),(0,r.kt)("p",null,"Revoke qualification from a worker."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a qualification"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"worker_id")," - id of a worker")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "unit_ids": [<int>, ...], // Required\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"patch-apiqualificationsidworkersworker_idrevoke"},(0,r.kt)("inlineCode",{parentName:"h3"},"PATCH /api/qualifications/{id}/workers/{worker_id}/revoke")),(0,r.kt)("p",null,"Revoke qualification from a worker (see the difference from ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," in the code)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a qualification"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"worker_id")," - id of a worker")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apigranted-qualificationsqualification_idsort"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/granted-qualifications?{qualification_id=}&{sort=}")),(0,r.kt)("p",null,"Get list of all granted queslifications"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"GET parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"qualification_id")," - id of a qualification that was granted to a workers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sort")," - field name and order to sort resonse results (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"value_current"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"-value_current"),")")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "granted_qualifications": [\n    {\n      "granted_at": <str>,\n      "qualification_id": <str>,\n      "qualification_name": <str>,\n      "units": [\n        {\n          "creation_date": <str>,\n          "task_id": <str>,\n          "task_name": <str>, \n          "unit_id": <str>,\n          "value": <int>,\n        },\n        ... // more units\n      ],\n      "value_current": <int>,\n      "worker_id": <str>,\n      "worker_name": <str>,\n    },\n    ... // more granted qualifications\n  ],\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apiunitstask_idunit_idscompleted"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/units?{task_id=}&{unit_ids=}&{completed=}")),(0,r.kt)("p",null,"Get workers' results (filtered by task_id and/or unit_ids, etc) - without full details of input/output.\nAt least one filtering parameter must be specified."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"GET parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"task_id")," - id of a task"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"unit_ids")," - ids of units"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"completed")," - show completed units or all (",(0,r.kt)("inlineCode",{parentName:"li"},"true"),"/",(0,r.kt)("inlineCode",{parentName:"li"},"false"),")")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "units": [\n    {\n      "creation_date": <int>,\n      "id": <int>,\n      "is_reviewed": <bool>,\n      "pay_amount": <int>,\n      "results": {\n        "start": ,\n        "end": ,\n        "inputs_preview": <json str>,  // optional\n        "outputs_preview": <json str>,  // optional\n      },\n      "review": {\n        "bonus": <int>,\n        "review_note": <str>,\n      },\n      "status": <str>,\n      "task_id": <int>,\n      "worker_id": <int>,\n    },\n    ...  // more units\n  ]\n}\n')),(0,r.kt)("h3",{id:"get-apiunitsdetailsunit_ids"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/units/details?{unit_ids=}")),(0,r.kt)("p",null,"Get full input for specified workers results (",(0,r.kt)("inlineCode",{parentName:"p"},"units_ids")," parameter is mandatory)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"GET parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"unit_ids")," - ids of units (Required)")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "units": [\n    {\n      "has_task_source_review": <bool>,\n      "id": <int>,\n      "inputs": <json object>,  // instructions for worker\n      "metadata": <json object>,  // any metadata (e.g. Worker Opinion, Unit Reviews, etc)\n      "outputs": <json object>,  // response from worker\n      "prepared_inputs": <json object>,  // prepared instructions from worker\n      "unit_data_folder": <str>},  // path to data dir in file system\n    },\n    ...  // more units\n  ]\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"post-apiunitsapprove"},(0,r.kt)("inlineCode",{parentName:"h3"},"POST /api/units/approve")),(0,r.kt)("p",null,"Approve worker's result."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "unit_ids": [<int>, ...], // Required\n  "review_note": <str>,  // optional\n  "bonus": <int>,  // optional\n  "send_to_worker": <bool>,  // optional\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"post-apiunitsreject"},(0,r.kt)("inlineCode",{parentName:"h3"},"POST /api/units/reject")),(0,r.kt)("p",null,"Reject worker's result."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "unit_ids": [<int>, ...], // Required\n  "review_note": <str>,  // optional\n  "send_to_worker": <bool>,  // optional\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"post-apiunitssoft-reject"},(0,r.kt)("inlineCode",{parentName:"h3"},"POST /api/units/soft-reject")),(0,r.kt)("p",null,"Soft-reject worker's result."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "unit_ids": [<int>, ...], // Required\n  "review_note": <str>,  // optional\n  "send_to_worker": <bool>,  // optional\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"post-apiworkersidblock"},(0,r.kt)("inlineCode",{parentName:"h3"},"POST /api/workers/{id}/block")),(0,r.kt)("p",null,"Permanently block a worker."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a worker")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "unit_ids": [<int>, ...], // optional\n  "review_note": <str>,  // Required\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"post-apiworkersidqualificationsgrant"},(0,r.kt)("inlineCode",{parentName:"h3"},"POST /api/workers/{id}/qualifications/grant")),(0,r.kt)("p",null,"Grant multiple qualifications to a worker with units."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a worker")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "unit_ids": [<int>, ...], // Required\n  "qualification_grants": [ // Required\n    {\n      "qualification_id": <int>,\n      "value": <int>,\n    },\n    ...\n  ],  \n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apiworkersidqualifications"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/workers/{id}/qualifications")),(0,r.kt)("p",null,"Get list of all granted qualifications for a worker."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - id of a worker")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "granted_qualifications": [\n    {\n      "worker_id": <int>,\n      "qualification_id": <int>,\n      "value": <int>,\n      "granted_at": <int>,  // maps to `worker_review.creation_date` column\n    }\n  ],\n  ...  // more granted qualifications\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apireview-statstask_idworker_idsincelimit"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/review-stats?{task_id=}&{worker_id=}&{since=}&{limit=}")),(0,r.kt)("p",null,"Get stats of (recent) approvals. Either ",(0,r.kt)("inlineCode",{parentName:"p"},"task_id")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"worker_id")," (or both) must be present."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"GET parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"task_id")," - id of a task (Required)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"worker_id")," - id of a worker (Required)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"since")," - show stats since date or datetime"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"limit")," - limit amount or items in results")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "stats": {\n    "total_count": <int>,  // within the scope of the filters\n    "reviewed_count": <int>,\n    "approved_count": <int>,\n    "rejected_count": <int>,\n    "soft_rejected_count": <int>,\n  },\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get-apiunitsunit_idstaticfilename"},(0,r.kt)("inlineCode",{parentName:"h3"},"GET /api/units/{unit_id}/static/{filename}")),(0,r.kt)("p",null,"Return static file from ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," directory for specific unit."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"URL parameters"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"unit_id")," - id of a unit"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"filename")," - name of a file, that was uploaded by a worker")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":\nFile that was uploaded during unit completion by a worker"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"error-response"},"Error response"),(0,r.kt)("p",null,"Exception are returned by the API in this format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "error": <str>,\n}\n')))}m.isMDXComponent=!0}}]);