"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[4655],{4127:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(1987);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5107:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(9375),a=n(8933),o=(n(1987),n(4127)),i=["components"],s={sidebar_position:4},l="Manual installation Mephisto",u={unversionedId:"guides/how_to_use/efficiency_organization/manual_installation",id:"guides/how_to_use/efficiency_organization/manual_installation",title:"Manual installation Mephisto",description:"(THIS FILE IS WORK IN PROGRESS)",source:"@site/docs/guides/how_to_use/efficiency_organization/manual_installation.md",sourceDirName:"guides/how_to_use/efficiency_organization",slug:"/guides/how_to_use/efficiency_organization/manual_installation",permalink:"/docs/guides/how_to_use/efficiency_organization/manual_installation",draft:!1,editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/guides/how_to_use/efficiency_organization/manual_installation.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"guides",previous:{title:"Running Mephisto with Docker",permalink:"/docs/guides/how_to_use/efficiency_organization/docker"},next:{title:"Common Configurations and FAQs",permalink:"/docs/guides/how_to_use/efficiency_organization/config_faq"}},c={},p=[{value:"Installation",id:"installation",level:3},{value:"Setup",id:"setup",level:3},{value:"Task parameters",id:"task-parameters",level:4},{value:"Let&#39;s get running!",id:"lets-get-running",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"manual-installation-mephisto"},"Manual installation Mephisto"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(THIS FILE IS WORK IN PROGRESS)")),(0,o.kt)("p",null,"First, clone this repo to your local system."),(0,o.kt)("p",null,"Mephisto requires >= Python 3.8 and >= npm v6."),(0,o.kt)("h3",{id:"installation"},"Installation"),(0,o.kt)("p",null,"You can install Mephisto in a few ways (Docker being the safest choice):"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Using docker:")," see ",(0,o.kt)("a",{parentName:"li",href:"/docs/guides/how_to_use/efficiency_organization/docker/"},"Running Mephisto with Docker")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Using pip:")," run this in the root repo directory",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ pip install -e .\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Using ",(0,o.kt)("a",{parentName:"strong",href:"https://github.com/python-poetry/poetry"},"poetry"),":")," run this in the root repo directory",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# install poetry\n$ curl -sSL https://install.python-poetry.org | python3 -\n# from the root dir, install Mephisto:\n$ poetry install\n")))),(0,o.kt)("h3",{id:"setup"},"Setup"),(0,o.kt)("p",null,"Now that you have Mephisto installed, you should have access to the ",(0,o.kt)("inlineCode",{parentName:"p"},"mephisto")," CLI tool. ",(0,o.kt)("em",{parentName:"p"},"If using Docker, you will need to SSH into the Docker container first.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We can use this CLI tool to change data directory (where the results of your crowdsourcing tasks will be stored). Its default location is ",(0,o.kt)("inlineCode",{parentName:"li"},"data")," inside the repo root; and here we will set it to ",(0,o.kt)("inlineCode",{parentName:"li"},"~/mephisto-data/data")," directory:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ mkdir ~/mephisto-data\n$ mkdir ~/mephisto-data/data\n$ mephisto config core.main_data_directory ~/mephisto-data/data\n"))),(0,o.kt)("li",{parentName:"ul"},"We can check that everything has been set up correctly:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ mephisto check\nMephisto seems to be set up correctly.\n")),(0,o.kt)("p",null,"Note that registering a sandbox user will not create a new entry in your ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.aws/credentials")," file if it's for the same account as your production user, as sandbox and prod on AWS use the same access keys."),(0,o.kt)("h4",{id:"task-parameters"},"Task parameters"),(0,o.kt)("p",null,"After registering a requester, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"mephisto.provider.requester_name=my_mturk_user")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"mephisto.provider.requester_name=my_mturk_user_sandbox")," respectively to launch a task on Mturk."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"lets-get-running"},"Let's get running!"),(0,o.kt)("p",null,"Now that you have your environment set up, you're ready for ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/tutorials/first_task/"},"Running your first task.")))}m.isMDXComponent=!0}}]);