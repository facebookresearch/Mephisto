"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[9397],{4127:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return d}});var r=a(1987);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),s=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},w=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(a),w=n,d=c["".concat(l,".").concat(w)]||c[w]||m[w]||i;return a?r.createElement(d,o(o({ref:t},u),{},{components:a})):r.createElement(d,o({ref:t},u))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=w;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:n,o[1]=p;for(var s=2;s<i;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}w.displayName="MDXCreateElement"},9668:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return w},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return c}});var r=a(9375),n=a(8933),i=(a(1987),a(4127)),o=["components"],p={sidebar_position:3},l="Enable unit preview in TaskReview app",s={unversionedId:"guides/how_to_use/review_app/enabling_original_unit_preview",id:"guides/how_to_use/review_app/enabling_original_unit_preview",title:"Enable unit preview in TaskReview app",description:"By default, TaskReview app UI always shows a generic results view (i.e. unit content submitted by worker in the format saved by AgentState, such as data/data/runs/...../agent_data.json content).",source:"@site/docs/guides/how_to_use/review_app/enabling_original_unit_preview.md",sourceDirName:"guides/how_to_use/review_app",slug:"/guides/how_to_use/review_app/enabling_original_unit_preview",permalink:"/docs/guides/how_to_use/review_app/enabling_original_unit_preview",draft:!1,editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/guides/how_to_use/review_app/enabling_original_unit_preview.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"guides",previous:{title:"Run TaskReview app",permalink:"/docs/guides/how_to_use/review_app/running"},next:{title:"TaskReview app API",permalink:"/docs/guides/how_to_use/review_app/server_api"}},u={},c=[],m={toc:c};function w(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"enable-unit-preview-in-taskreview-app"},"Enable unit preview in TaskReview app"),(0,i.kt)("p",null,"By default, TaskReview app UI always shows a generic results view (i.e. unit content submitted by worker in the format saved by AgentState, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"data/data/runs/...../agent_data.json")," content)."),(0,i.kt)("p",null,'Additionally, you can enable custom display of unit content (e.g. to show task same way as a worker saw it).\nTo do so, you will need to create a separate "review" version of your app.\nThen TaskReview app UI will show "review" version to reviewer inside an iframe, while "regular" version will be shown to worker.'),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create ",(0,i.kt)("inlineCode",{parentName:"p"},"review_app")," subdirectory within your app, next to the main ",(0,i.kt)("inlineCode",{parentName:"p"},"app")," subdirectory. Its content should include:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Main JS file ",(0,i.kt)("inlineCode",{parentName:"li"},"review.js")," for ReviewApp",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Example: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/facebookresearch/Mephisto/blob/main/examples/form_composer_demo/webapp/src/review.js"},"review.js")))),(0,i.kt)("li",{parentName:"ul"},"ReviewApp ",(0,i.kt)("inlineCode",{parentName:"li"},"reviewapp.jsx"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Example: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/facebookresearch/Mephisto/blob/main/examples/form_composer_demo/webapp/src/reviewapp.jsx"},"reviewapp.jsx")))),(0,i.kt)("li",{parentName:"ul"},"Separate Webpack config ",(0,i.kt)("inlineCode",{parentName:"li"},"webpack.config.review.js"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Example: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/facebookresearch/Mephisto/blob/main/examples/form_composer_demo/webapp/webpack.config.review.js"},"webpack.config.review.js")))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Specify in your Hydra YAML, under ",(0,i.kt)("inlineCode",{parentName:"p"},"mephisto.blueprint")," section:"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"task_source_review: ${task_dir}/webapp/build/bundle.review.js\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},'Add a separate build command for the "review" bundle')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'"build:review": "webpack --config=webpack.config.review.js --mode development"\n')),(0,i.kt)("p",null,"Example: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/facebookresearch/Mephisto/blob/main/examples/form_composer_demo/webapp/package.json"},"package.json")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},'Build this "review" bundle by running ',(0,i.kt)("inlineCode",{parentName:"p"},"npm run build:review")," from directory with ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"This ",(0,i.kt)("inlineCode",{parentName:"p"},"reviewapp.jsx")," must satisfy 3 requirements, to interface with TaskReview:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Render "review" task version only upon receiving messages with Task data:',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Example: comment #1 in ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/facebookresearch/Mephisto/blob/main/examples/form_composer_demo/webapp/src/reviewapp.jsx"},"reviewapp.jsx")))),(0,i.kt)("li",{parentName:"ul"},'Send messages with displayed "review" page height (to resize containing iframe and avoid scrollbars)',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Example: comment #2 in ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/facebookresearch/Mephisto/blob/main/examples/form_composer_demo/webapp/src/reviewapp.jsx"},"reviewapp.jsx"),(0,i.kt)("inlineCode",{parentName:"li"},"<div ref={appRef}>")))),(0,i.kt)("li",{parentName:"ul"},"Rendered component must always return reference to ",(0,i.kt)("inlineCode",{parentName:"li"},"appRef"),", like so: ",(0,i.kt)("inlineCode",{parentName:"li"},"<div ref={appRef}>"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Example: comment #3 in ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/facebookresearch/Mephisto/blob/main/examples/form_composer_demo/webapp/src/reviewapp.jsx"},"reviewapp.jsx"))))))))}w.isMDXComponent=!0}}]);